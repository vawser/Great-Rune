TRUE = 1
FALSE = 0
INVALID = -1

-- Player State
PLAYER_STATE_IDLE = 0
PLAYER_STATE_MOVE = 1

-- Turn Type
TURN_TYPE_DEFAULT = 0
TURN_TYPE_STANCE = 1

-- Stamina
STAMINA_MINIMUM = 0
STAMINA_REDUCE_ROLLING = -12
STAMINA_REDUCE_BACKSTEP = -8
STAMINA_REDUCE_ARTS_QUICKSTEP = -12
STAMINA_REDUCE_JUMP = -10
STAMINA_REDUCE_RIDE_DASH = -20
STAMINA_REDUCE_RIDE_JUMP = -10
STAMINA_CONSUMERATE_LOWSTATUS = 1.5

-- Jump
SPEED_ENABLE_JUMP = 1.600000023841858

-- Land
LAND_DEFAULT = 0
LAND_MIDDLE = 1
LAND_HEAVY = 2
LAND_JUMP = 6

-- Fall
FALL_DEFAULT = 0
FALL_ATTACK = 1
FALL_LADDER = 2
FALL_FACEUP = 3
FALL_FACEDOWN = 4
FALL_TYPE_DEFAULT = 0
FALL_TYPE_JUMP = 1
FALL_TYPE_FORCE = 2
FALL_TYPE_FORCE_LOOP = 3
FALL_TYPE_FACEUP = 4
FALL_TYPE_FACEUP_LOOP = 5
FALL_TYPE_FACEDOWN = 6
FALL_TYPE_FACEDOWN_LOOP = 7

-- Weight
WEIGHT_LIGHT = 0
WEIGHT_NORMAL = 5
WEIGHT_HEAVY = 10
WEIGHT_OVERWEIGHT = 15
WEIGHT_SUPERLIGHT = 16

-- Move Weight
MOVE_WEIGHT_LIGHT = 0
MOVE_WEIGHT_NORMAL = 1
MOVE_WEIGHT_HEAVY = 2
MOVE_WEIGHT_SUPERLIGHT = 3

-- Evasion Weight
EVASION_WEIGHT_INDEX_LIGHT = 0
EVASION_WEIGHT_INDEX_MEDIUM = 1
EVASION_WEIGHT_INDEX_HEAVY = 2
EVASION_WEIGHT_INDEX_OVERWEIGHT = 3
EVASION_WEIGHT_INDEX_SUPERLIGHT = 4

-- 
ALLBODY = 0
UPPER = 1
LOWER = 2
LOWER_IDLE = 0
LOWER_MOVE = 1
LOWER_TURN = 2
LOWER_END_TURN = 3

-- Quick Type
QUICKTYPE_NORMAL = 0
QUICKTYPE_DASH = 1
QUICKTYPE_ROLLING = 2
QUICKTYPE_ATTACK = 3
QUICKTYPE_COMBO = 4
QUICKTYPE_BACKSTEP = 5
QUICKTYPE_RUN = 6

-- 
ESTEP_NONE = 0
ESTEP_DOWN = 1
ESTEP_UP = 2
TO_GUARDON = 1

-- Action Request
ACTION_ARM_R1 = 0
ACTION_ARM_R2 = 1
ACTION_ARM_L1 = 2
ACTION_ARM_L2 = 3
ACTION_ARM_ACTION = 4
ACTION_ARM_SP_MOVE = 5
ACTION_ARM_CHANGE_STYLE = 6
ACTION_ARM_USE_ITEM = 7
ACTION_ARM_SWITCH_FORM = 8
ACTION_ARM_CHANGE_WEAPON_R = 9
ACTION_ARM_CHANGE_WEAPON_L = 10
ACTION_ARM_CHANGE_ITEM = 11
ACTION_ARM_R3 = 12
ACTION_ARM_L3 = 13
ACTION_ARM_TOUCH_R = 14
ACTION_ARM_TOUCH_L = 15
ACTION_ARM_BACKSTEP = 16
ACTION_ARM_ROLLING = 17
ACTION_ARM_MAGIC_R = 19
ACTION_ARM_MAGIC_L = 20
ACTION_ARM_GESTURE = 21
ACTION_ARM_LADDERUP = 22
ACTION_ARM_LADDERDOWN = 23
ACTION_ARM_GUARD = 24
ACTION_ARM_EMERGENCYSTEP = 25
ACTION_ARM_LIGHT_KICK = 26
ACTION_ARM_HEAVY_KICK = 27
ACTION_ARM_CHANGE_STYLE_R = 28
ACTION_ARM_CHANGE_STYLE_L = 29
ACTION_ARM_RIDEON = 30
ACTION_ARM_RIDEOFF = 31
ACTION_ARM_BUDDY_DISAPPEAR = 32

-- Item 
ITEM_RECOVER = 0
ITEM_WEAPON_ENCHANT = 1
ITEM_THROW_KNIFE = 2
ITEM_THROW_BOTTLE = 3
ITEM_MEGANE = 4
ITEM_REPAIR = 5
ITEM_PRAY = 6
ITEM_TRAP = 7
ITEM_MESSAGE = 8
ITEM_SOUL = 9
ITEM_DRINK = 10
ITEM_DRAGON_HEAD = 11
ITEM_DRAGON_BODY = 12
ITEM_PRAY2 = 13
ITEM_SHOCK_WAVE = 14
ITEM_QUICK_WEAPON_ENCHANT = 16
ITEM_QUICK_THROW_KNIFE = 17
ITEM_QUICK_THROW_BOTTLE = 18
ITEM_DRINK_MP = 19
ITEM_STRING_BOTTLE = 20
ITEM_DRINK_SAKE = 21
ITEM_THROW_SPEAR = 22
ITEM_DRAGONHEADLVL2 = 23
ITEM_DRAGONFULLLVL2 = 24
ITEM_OLDMONK = 25
ITEM_EATJERKY = 26
ITEM_LANTERN = 27
ITEM_ELIXIR = 28
ITEM_HORN = 29
ITEM_COPY_SLEEP = 30
ITEM_VOICE = 31
ITEM_SUMMONHORSE = 32
ITEM_RETURNBUDDY = 33
ITEM_SUMMONBUDDY = 34
ITEM_HOST = 36
ITEM_MULTIKICK = 37
ITEM_TONGUE = 38
ITEM_HOLYSYMBOL = 39
ITEM_NIGHT_BELL = 51
ITEM_HORSE_FEED = 56
ITEM_AROMAWIDE = 90
ITEM_AROMAUP = 91
ITEM_AROMAFRONT = 92
ITEM_AROMADRINK = 93
ITEM_AROMABREATH = 94
ITEM_AROMA_LONG_WIDE = 95
ITEM_AROMA_LONG_UP = 96
ITEM_AROMA_LONG_FRONT = 97
ITEM_AROMA_LONG_DRINK = 98
ITEM_NO_DRINK = 254
ITEM_INVALID = 255

-- Magic
MAGIC_REQUEST_ENBULLET = 1
MAGIC_REQUEST_ENBULLET2 = 2
MAGIC_REQUEST_MACHINEGUN = 4
MAGIC_REQUEST_EX_LARGE_ARROW = 5
MAGIC_REQUEST_CRYSTAL_MOON = 6
MAGIC_REQUEST_BEAM_CANNON = 7
MAGIC_REQUEST_FANNEL = 8
MAGIC_REQUEST_SLASH = 9
MAGIC_REQUEST_CHOP = 10
MAGIC_REQUEST_WEAPON_ENCHANT = 11
MAGIC_REQUEST_SHIELD_ENCHANT = 12
MAGIC_REQUEST_ENVIRONMENT = 13
MAGIC_REQUEST_GRAVITY = 14
MAGIC_REQUEST_METEOR = 15
MAGIC_REQUEST_LIGHTWAVE = 16
MAGIC_REQUEST_FLAME_RADIATION = 17
MAGIC_REQUEST_BIT = 19
MAGIC_REQUEST_WHIP = 20
MAGIC_REQUEST_BLACK_FLAME_DRAGON_WHIP = 22
MAGIC_REQUEST_FLAMETHROWER = 23
MAGIC_REQUEST_SPARK = 24
MAGIC_REQUEST_FLAME_NEAR = 25
MAGIC_REQUEST_MIRACLE_RADIATION = 26
MAGIC_REQUEST_CHAKRAM = 27
MAGIC_REQUEST_IMPACT = 28
MAGIC_REQUEST_WRATH = 29
MAGIC_REQUEST_SELF_FLAME_ENCHANT = 31
MAGIC_REQUEST_WEAPON_ENCHANT2 = 32
MAGIC_REQUEST_STANDINGPRAYHOLD = 33
MAGIC_REQUEST_PRAY = 34
MAGIC_REQUEST_AOEPRAYHOLD = 35
MAGIC_REQUEST_THUNDER = 36
MAGIC_REQUEST_STONE_RADIATION = 37
MAGIC_REQUEST_STONE_SHOTGUN = 38
MAGIC_REQUEST_GROUND_SHOCKWAVE = 40
MAGIC_REQUEST_SHOCKWAVE_ROUND = 41
MAGIC_REQUEST_LIGHTNING_ROD = 42
MAGIC_REQUEST_HOLY_SPARK = 43
MAGIC_REQUEST_CRUSH = 44
MAGIC_REQUEST_THUNDER_SCYTHE = 45
MAGIC_REQUEST_ORDER_RING = 48
MAGIC_REQUEST_ORDER_SHIELD = 49
MAGIC_REQUEST_FLYING_BREATH = 50
MAGIC_REQUEST_ELDER_DRAGON_BREATH = 51
MAGIC_REQUEST_DRAGON_CLAW = 52
MAGIC_REQUEST_DRAGON_CLAW_DOUBLE = 53
MAGIC_REQUEST_DRAGON_BITE = 54
MAGIC_REQUEST_DRAGON_CRY = 55
MAGIC_REQUEST_BLASTING = 56
MAGIC_REQUEST_DRILL = 57
MAGIC_REQUEST_CRYSTAL_SPARK = 58
MAGIC_REQUEST_THUNDER_ENCHANT = 59
MAGIC_REQUEST_THUNDER_BUFF = 60
MAGIC_REQUEST_GHOST_EXPLOSION = 65
MAGIC_REQUEST_EYE_LIGHTNING = 66
MAGIC_REQUEST_BREATH = 67
MAGIC_REQUEST_EARTHQUAKE = 68
MAGIC_REQUEST_TAIL_WHIP = 70
MAGIC_REQUEST_SHOULDER_TACKLE = 71
MAGIC_REQUEST_STRING = 74
MAGIC_REQUEST_BUBBLE = 75
MAGIC_REQUEST_LARGE_BUBBLE = 76
MAGIC_REQUEST_HUMMER = 78
MAGIC_REQUEST_QUICKENBULLET = 79
MAGIC_REQUEST_QUICKSLASH = 80
MAGIC_REQUEST_IVY_SPARK = 81
MAGIC_REQUEST_IVY_GROUND = 82
MAGIC_REQUEST_BACK_BULLET = 83
MAGIC_REQUEST_MAGIC_DRAIN = 84
MAGIC_REQUEST_FLAIR = 85
MAGIC_REQUEST_RETRIBUTION = 86
MAGIC_REQUEST_TURN_UNDEAD = 87
MAGIC_REQUEST_EYE_LIGHTNING_LARGE = 88
MAGIC_REQUEST_CHAOS_BEAM = 89
MAGIC_REQUEST_MAD_CRY = 90
MAGIC_REQUEST_MULTI_MISSLE = 91
MAGIC_REQUEST_CANNON = 92
MAGIC_REQUEST_SALT_BULLET = 93
MAGIC_REQUEST_DEMON_FLAME = 94
MAGIC_REQUEST_SNAKE_BULLET = 95
MAGIC_REQUEST_DOUBLE_THUNDER = 98
MAGIC_REQUEST_FLAME_CIRCLE = 99
MAGIC_REQUEST_THROAT_BREATH = 100
MAGIC_REQUEST_SELF_ENCHANT = 101
MAGIC_REQUEST_MAGIC_SPARK = 102
MAGIC_REQUEST_FOLLOWER = 103
MAGIC_REQUEST_HOLY_ENCHANT = 104
MAGIC_REQUEST_UPPER_FORCE = 105
MAGIC_REQUEST_QUICK_FLAME = 106
MAGIC_REQUEST_MAD_THROW = 0
MAGIC_REQUEST_LIGHT_WALL = 109
MAGIC_REQUEST_WEAPON_ENCHANT_B = 112
MAGIC_REQUEST_INVALID = 254
MAGIC_REQUEST_NOTHING = 255

-- Ladder Action
LADDER_ACTION_INVALID = -1
LADDER_ACTION_START_BOTTOM = 0
LADDER_ACTION_START_TOP = 1
LADDER_ACTION_UP_RIGHT = 2
LADDER_ACTION_UP_LEFT = 3
LADDER_ACTION_DOWN_RIGHT = 4
LADDER_ACTION_DOWN_LEFT = 5
LADDER_ACTION_END_TOP = 6
LADDER_ACTION_END_BOTTOM = 7
LADDER_ACTION_IDLE_RIGHT = 8
LADDER_ACTION_IDLE_LEFT = 9
LADDER_ACTION_ATTACK_UP_RIGHT = 10
LADDER_ACTION_ATTACK_UP_LEFT = 11
LADDER_ACTION_ATTACK_DOWN_RIGHT = 12
LADDER_ACTION_ATTACK_DOWN_LEFT = 13
LADDER_ACTION_COAST_START = 14
LADDER_ACTION_COAST_RIGHT = 15
LADDER_ACTION_COAST_STOP = 16
LADDER_ACTION_COAST_LEFT = 18
LADDER_ACTION_COAST_LANDING = 20
LADDER_ACTION_DAMAGE_SMALL = 21
LADDER_ACTION_DAMAGE_LARGE = 22
LADDER_CALL_UP = 0
LADDER_CALL_DOWN = 1

-- Hand State
HAND_STATE_RIGHT = 0
HAND_STATE_LEFT = 1

-- Ladder
LADDER_EVENT_COMMAND_UP = 2
LADDER_EVENT_COMMAND_DOWN = 3
LADDER_EVENT_COMMAND_END_TOP = 4
LADDER_EVENT_COMMAND_END_BOTTOM = 5
LADDER_EVENT_COMMAND_EXIT = 10000
LADDER_UP_CHECK_DIST = 0.5
LADDER_DOWN_CHECK_DIST = 0.30000001192092896
LADDER_START_CHECK_DIST = 1.5
LADDER_JUMP_SP_RELEASED = 0
LADDER_JUMP_WHEN_RELEASE = 1
LADDER_JUMP_INVALID = 2

-- Throw Type
THROW_TYPE_DEATH = 6
THROW_TYPE_INVALID = 0

-- Hand
HAND_LEFT = 0
HAND_RIGHT = 1
HAND_LEFT_BOTH = 2
HAND_RIGHT_BOTH = 3

-- Weapon Change
WEAPON_CHANGE_REQUEST_INVALID = -1
WEAPON_CHANGE_REQUEST_RIGHT_WAIST = 0
WEAPON_CHANGE_REQUEST_RIGHT_BACK = 1
WEAPON_CHANGE_REQUEST_RIGHT_SHOULDER = 2
WEAPON_CHANGE_REQUEST_RIGHT_SPEAR = 3
WEAPON_CHANGE_REQUEST_LEFT_WAIST = 4
WEAPON_CHANGE_REQUEST_LEFT_BACK = 5
WEAPON_CHANGE_REQUEST_LEFT_SHOULDER = 6
WEAPON_CHANGE_REQUEST_LEFT_SPEAR = 7

-- Weapon Position
LEFT_TO_WAIST = 0
LEFT_TO_BACK = 1
LEFT_TO_SHOULDER = 2
LEFT_TO_SPEAR = 3
BOTH_TO_WAIST = 4
BOTH_TO_BACK = 5
BOTH_TO_SHOULDER = 6
RIGHT_TO_WAIST = 7
RIGHT_TO_BACK = 8
RIGHT_TO_SHOULDER = 9
RIGHT_TO_SPEAR = 10
BOTHRIGHT_TO_WAIST = 11
BOTHRIGHT_TO_BACK = 12
BOTHRIGHT_TO_SHOULDER = 13
SINGLELEFT_TO_WAIST = 14
SINGLELEFT_TO_BACK = 15
SINGLELEFT_TO_SHOULDER = 16
SINGLELEFT_TO_SPEAR = 17
LEFT_FROM_WAIST = 0
LEFT_FROM_BACK = 1
LEFT_FROM_SHOULDER = 2
LEFT_FROM_SPEAR = 3
BOTH_FROM_ALL = 4
RIGHT_FROM_WAIST = 5
RIGHT_FROM_BACK = 6
RIGHT_FROM_SHOULDER = 7
RIGHT_FROM_SPEAR = 8
BOTHLEFT_FROM_ALL = 9

-- Weapon Position (Ride)
RIDE_LEFT_TO_WAIST = 0
RIDE_LEFT_TO_BACK = 1
RIDE_LEFT_TO_SHOULDER = 2
RIDE_LEFT_TO_SPEAR = 3
RIDE_RIGHT_TO_WAIST = 4
RIDE_RIGHT_TO_BACK = 5
RIDE_RIGHT_TO_SHOULDER = 6
RIDE_RIGHT_TO_SPEAR = 7
RIDE_LEFT_FROM_WAIST = 0
RIDE_LEFT_FROM_BACK = 1
RIDE_LEFT_FROM_SHOULDER = 2
RIDE_LEFT_FROM_SPEAR = 3
RIDE_RIGHT_FROM_LEFTWAIST_FROM_MIDDLE = 4
RIDE_RIGHT_FROM_RIGHTBACK_FROM_MIDDLE = 5
RIDE_RIGHT_FROM_RIGHTSHOULDER_FROM_MIDDLE = 6
RIDE_RIGHT_FROM_RIGHTSPEAR_FROM_MIDDLE = 7
RIDE_RIGHT_FROM_WAIST = 8
RIDE_RIGHT_FROM_BACK = 9
RIDE_RIGHT_FROM_SHOULDER = 10
RIDE_RIGHT_FROM_SPEAR = 11
RIDE_BOTHLEFT_FROM_WAIST = 12
RIDE_BOTHLEFT_FROM_BACK = 13
RIDE_BOTHLEFT_FROM_SHOULDER = 14
RIDE_BOTHLEFT_FROM_SPEAR = 15

-- Weapon Category
WEAPON_CATEGORY_SHORT_SWORD = 20
WEAPON_CATEGORY_TORCH = 21
WEAPON_CATEGORY_CLAW = 22
WEAPON_CATEGORY_STRAIGHT_SWORD = 23
WEAPON_CATEGORY_TWINBLADE = 24
WEAPON_CATEGORY_LARGE_SWORD = 25
WEAPON_CATEGORY_EXTRALARGE_SWORD = 26
WEAPON_CATEGORY_RAPIER = 27
WEAPON_CATEGORY_CURVEDSWORD = 28
WEAPON_CATEGORY_KATANA = 29
WEAPON_CATEGORY_AX = 30
WEAPON_CATEGORY_EXTRALARGE_AXHAMMER = 31
WEAPON_CATEGORY_LARGE_AX = 32
WEAPON_CATEGORY_HAMMER = 33
WEAPON_CATEGORY_FLAIL = 34
WEAPON_CATEGORY_LARGE_HAMMER = 35
WEAPON_CATEGORY_SPEAR = 36
WEAPON_CATEGORY_LARGE_SPEAR = 37
WEAPON_CATEGORY_HALBERD = 38
WEAPON_CATEGORY_LARGE_RAPIER = 39
WEAPON_CATEGORY_LARGE_CURVEDSWORD = 40
WEAPON_CATEGORY_STAFF = 41
WEAPON_CATEGORY_FIST = 42
WEAPON_CATEGORY_WHIP = 43
WEAPON_CATEGORY_ARROW = 44
WEAPON_CATEGORY_LARGE_ARROW = 45
WEAPON_CATEGORY_CROSSBOW = 46
WEAPON_CATEGORY_LARGE_SHIELD = 47
WEAPON_CATEGORY_SMALL_SHIELD = 48
WEAPON_CATEGORY_MIDDLE_SHIELD = 49
WEAPON_CATEGORY_LARGE_SCYTHE = 50
WEAPON_CATEGORY_SMALL_ARROW = 51
WEAPON_CATEGORY_BALLISTA = 52

-- "Can Guard"
-- Category, Right Hand, Right Hand
WeaponCategoryID = {
    {20, FALSE, TRUE}, 
    {21, TRUE, TRUE}, 
    {22, FALSE, TRUE}, 
    {23, FALSE, TRUE}, 
    {24, FALSE, TRUE},
    {25, FALSE, TRUE}, 
    {26, FALSE, TRUE}, 
    {27, FALSE, TRUE}, 
    {28, FALSE, TRUE}, 
    {29, FALSE, TRUE}, 
    {30, FALSE, TRUE}, 
    {31, FALSE, TRUE}, 
    {32, FALSE, TRUE}, 
    {33, FALSE, TRUE}, 
    {34, FALSE, TRUE}, 
    {35, FALSE, TRUE}, 
    {36, FALSE, TRUE}, 
    {37, FALSE, TRUE}, 
    {38, FALSE, TRUE}, 
    {39, FALSE, TRUE}, 
    {40, FALSE, TRUE}, 
    {41, FALSE, TRUE}, 
    {42, FALSE, TRUE}, 
    {43, FALSE, TRUE}, 
    {44, FALSE, FALSE}, 
    {45, FALSE, FALSE}, 
    {46, FALSE, FALSE}, 
    {47, TRUE, TRUE}, 
    {48, TRUE, TRUE}, 
    {49, TRUE, TRUE}, 
    {50, FALSE, TRUE}, 
    {51, FALSE, FALSE}, 
    {52, FALSE, FALSE}
}

-- Damage Type
DAMAGE_TYPE_DEATH = 2
DAMAGE_TYPE_GUARD = 3
DAMAGE_TYPE_EVENT = 4
DAMAGE_TYPE_PARRY = 5
DAMAGE_TYPE_DEATH_FALLING = 6
DAMAGE_TYPE_DEATH_RECOVER = 7
DAMAGE_TYPE_DEATH_IDLE = 8
DAMAGE_TYPE_DEATH_AIR = 9
DAMAGE_TYPE_WEAK_POINT = 10
DAMAGE_TYPE_GUARDED = 1000
DAMAGE_TYPE_GUARDBREAK = 1001
DAMAGE_TYPE_BACK = 1002
DAMAGE_TYPE_GUARDED_LEFT = 1003
DAMAGE_TYPE_GUARDBREAK_BLAST = 1004
DAMAGE_TYPE_GUARDBREAK_FLING = 1005
DAMAGE_TYPE_WALL_RIGHT = 1006
DAMAGE_TYPE_WALL_LEFT = 1007
DAMAGE_TYPE_INVALID = 99999
DAMAGE_LEVEL_NONE = 0
DAMAGE_LEVEL_SMALL = 1
DAMAGE_LEVEL_MIDDLE = 2
DAMAGE_LEVEL_LARGE = 3
DAMAGE_LEVEL_EXLARGE = 4
DAMAGE_LEVEL_PUSH = 5
DAMAGE_LEVEL_FLING = 6
DAMAGE_LEVEL_SMALL_BLOW = 7
DAMAGE_LEVEL_MINIMUM = 8
DAMAGE_LEVEL_UPPER = 9
DAMAGE_LEVEL_EX_BLAST = 10
DAMAGE_LEVEL_BREATH = 11

-- Attack Direction
ATTACK_DIR_FRONT = 0
ATTACK_DIR_UP = 1
ATTACK_DIR_DOWN = 2
ATTACK_DIR_LEFT = 3
ATTACK_DIR_RIGHT = 4

-- Damage Direction
DAMAGE_DIR_LEFT = 0
DAMAGE_DIR_RIGHT = 1
DAMAGE_DIR_FRONT = 2
DAMAGE_DIR_BACK = 3

-- Death Type
DEATH_TYPE_COMMON = 0
DEATH_TYPE_COMMON_BACK = 1
DEATH_TYPE_BLAST = 2
DEATH_TYPE_WEAK = 3
DEATH_TYPE_FLING = 4
DEATH_TYPE_LAND = 5
DEATH_TYPE_STONE = 6
DEATH_TYPE_UPPER = 7
DEATH_TYPE_POISON = 8
DEATH_TYPE_LAND_LOW = 9
DEATH_TYPE_MAD = 10

-- Ride Death Type
RIDE_DEATH_TYPE_COMMON = 0
RIDE_DEATH_TYPE_MAD = 1
RIDE_DEATH_TYPE_STONE = 2

-- Condition Type
CONDITION_TYPE_CHANGE = 96
CONDITION_TYPE_CURSE = 116
CONDITION_TYPE_STONE = 117
CONDITION_TYPE_CRYSTAL = 136
CONDITION_TYPE_UNDEAD = 143
CONDITION_TYPE_FAKE_DEATH = 144
CONDITION_TYPE_SAINT = 146
CONDITION_TYPE_NO_EST = 154
CONDITION_TYPE_ALL_CHANGE = 167
CONDITION_TYPE_EGG = 192
CONDITION_TYPE_COLLUSIUM = 233
CONDITION_TYPE_TAINT = 260
CONDITION_TYPE_TAINTDEATH = 268
CONDITION_TYPE_POISON = 2
CONDITION_TYPE_SLEEP = 436
CONDITION_TYPE_MAD = 437

-- Damage Flag
DAMAGE_FLAG_MINIMUM = 0
DAMAGE_FLAG_SMALL = 1
DAMAGE_FLAG_MEDIUM = 2
DAMAGE_FLAG_LARGE = 3
DAMAGE_FLAG_SMALL_BLOW = 4
DAMAGE_FLAG_LARGE_BLOW = 5
DAMAGE_FLAG_FLING = 6
DAMAGE_FLAG_BLAST = 7
DAMAGE_FLAG_PUSH = 8
DAMAGE_FLAG_BREATH = 9
DAMAGE_FLAG_WEAK = 10
DAMAGE_FLAG_GUARD_SMALL = 11
DAMAGE_FLAG_GUARD_LARGE = 12
DAMAGE_FLAG_GUARD_EXLARGE = 13
DAMAGE_FLAG_GUARD_BREAK = 14

-- Attack Type
ATTACK_TYPE_INVALID = -1
ATTACK_TYPE_DEFAULT = 0
ATTACK_TYPE_LARGE = 1
ATTACK_TYPE_BOTH_DEFAULT = 2
ATTACK_TYPE_BOTH_LARGE = 3
ATTACK_TYPE_WEAK = 4
ATTACK_TYPE_NEAR = 5
ATTACK_TYPE_FAR = 6
ATTACK_TYPE_BOTH_NEAR = 7
ATTACK_TYPE_BOTH_FAR = 8
ATTACK_TYPE_AFTER_PARRY = 9
ATTACK_TYPE_BACK = 10
ATTACK_TYPE_GUARD = 11
ATTACK_TYPE_PARRY = 12

-- Attack Request
ATTACK_REQUEST_ROLLING = 1000
ATTACK_REQUEST_BACKSTEP = 1001
ATTACK_REQUEST_EMERGENCYSTEP = 1003
ATTACK_REQUEST_INVALID = -1
ATTACK_REQUEST_RIGHT_LIGHT = 0
ATTACK_REQUEST_RIGHT_HEAVY = 1
ATTACK_REQUEST_BOTH_LIGHT = 2
ATTACK_REQUEST_BOTH_LEFT = 3
ATTACK_REQUEST_BOTH_HEAVY = 4
ATTACK_REQUEST_LIGHT_KICK = 5
ATTACK_REQUEST_HEAVY_KICK = 6
ATTACK_REQUEST_LEFT_LIGHT = 7
ATTACK_REQUEST_LEFT_HEAVY = 8
ATTACK_REQUEST_ARROW_BOTH_RIGHT = 9
ATTACK_REQUEST_ARROW_BOTH_LEFT = 10
ATTACK_REQUEST_ARROW_FIRE_RIGHT = 11
ATTACK_REQUEST_ARROW_FIRE_RIGHT2 = 12
ATTACK_REQUEST_ARROW_FIRE_LEFT = 13
ATTACK_REQUEST_ARROW_FIRE_LEFT2 = 14
ATTACK_REQUEST_ATTACK_WHILE_GUARD = 15
ATTACK_REQUEST_ARROW_CHANGE_RIGHT = 16
ATTACK_REQUEST_ARROW_CHANGE_LEFT = 17
ATTACK_REQUEST_RIGHT_CROSSBOW = 18
ATTACK_REQUEST_RIGHT_CROSSBOW2 = 19
ATTACK_REQUEST_LEFT_CROSSBOW = 22
ATTACK_REQUEST_LEFT_CROSSBOW2 = 23
ATTACK_REQUEST_BOTHRIGHT_CROSSBOW = 20
ATTACK_REQUEST_BOTHRIGHT_CROSSBOW2 = 21
ATTACK_REQUEST_BOTHLEFT_CROSSBOW = 24
ATTACK_REQUEST_BOTHLEFT_CROSSBOW2 = 25
ATTACK_REQEST_LEFT_REVERSAL = 22
ATTACK_REQUEST_DUAL_RIGHT = 26
ATTACK_REQUEST_DUAL_LEFT = 27

MagicPutOppositeWeapon = {
    [0] = {TRUE, TRUE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, TRUE, TRUE}, {TRUE, TRUE, TRUE}, {TRUE, TRUE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, TRUE, TRUE}, {TRUE, TRUE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, TRUE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, TRUE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, TRUE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, TRUE, TRUE}, {TRUE, TRUE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, TRUE, TRUE}, {TRUE, TRUE, TRUE}, {TRUE, TRUE, TRUE}, {TRUE, TRUE, TRUE}, {TRUE, TRUE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, TRUE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, TRUE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, TRUE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, TRUE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, TRUE, TRUE}, {TRUE, TRUE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, TRUE, TRUE}, {TRUE, TRUE, TRUE}, {TRUE, TRUE, TRUE}, {TRUE, TRUE, TRUE}, {TRUE, TRUE, TRUE}, {TRUE, TRUE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, TRUE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, TRUE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, TRUE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, TRUE, TRUE}, {TRUE, TRUE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, TRUE, TRUE}, {TRUE, TRUE, TRUE}, {TRUE, TRUE, TRUE}, {TRUE, TRUE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}
}

function GetMagicPutOppositeWeapon()
    local isMagicPutOppositeWeapon = nil
    
    if c_Style == HAND_RIGHT then
        if HAND_RIGHT == g_Magichand then
            isMagicPutOppositeWeapon = MagicPutOppositeWeapon[g_MagicIndex][1]
        else
            isMagicPutOppositeWeapon = MagicPutOppositeWeapon[g_MagicIndex][2]
        end
    else
        isMagicPutOppositeWeapon = MagicPutOppositeWeapon[g_MagicIndex][3]
    end
    
    return isMagicPutOppositeWeapon
end

SwordArtsCategory = {
    [0] = {0}, {0, 2, 3, 42}, {0}, {0, 2, 3, 24}, {0, 2, 3}, {0}, {0}, {0, 2, 3}, {0, 2, 3}, {0, 2, 3}, {0}, {0}, {0, 2, 3}, {0}, {0}, {0}, {0}, {0}, {0, 3}, {0}, {0}, {0}, {0, 3, 24}, {0, 3, 24}, {0, 2, 3, 24}, {0}, [50] = {0}, {0}, {0, 24}, {0}, {0, 2, 24}, {0}, {0}, {0, 2}, {0}, {0}, [61] = {0}, {0}, {0}, {0, 42}, {0, 3}, {0}, {0}, {0}, {0}, {0}, {0}, {0}, {0}, {0}, {0}, {0}, [90] = {0, 47, 48}, {0, 2, 3, 4, 5, 8, 9, 47, 48}, {0, 20, 28, 48}, {0, 2, 3}, {0}, {0}, {0}, {0}, {0, 47, 48}, {0}, {0}, {0}, {0}, {0}, [108] = {0}, [105] = {0, 45}, {0}, [110] = {0}, {0}, {0}, {0}, {0}, {0}, {0}, {0}, {0}, [130] = {0}, {0}, {0}, {0}, {0}, {0}, {0}, {0}, [140] = {0}, {0}, {0}, {0}, {0}, [150] = {0, 2, 42}, {0}, {0}, [155] = {0}, {0}, {0}, [160] = {0}, [165] = {0}, {0}, {0}, {0}, [196] = {0, 2, 3}
}

function GetSwordArtsDiffCategory(artID, idleCat, wepCat)
    if 170 <= artID and artID ~= 196 then
        return 0
    elseif artID == 169 then
        return 45
    end
    
    local wep_cat0 = wepCat
    local wep_cat1 = wep_cat0
    
    if wep_cat1 == WEAPON_CATEGORY_CLAW then
        wep_cat1 = WEAPON_CATEGORY_FIST
    end
    
    local idle_cat0 = idleCat
    
    if idle_cat0 >= 10 then
        idle_cat0 = idle_cat0 - 10
    end
    
    if wepCat == 39 then
        idle_cat0 = 0
    end
    
    -- Handle Left-Hand
    if c_SwordArtsHand == HAND_LEFT and c_Style ~= HAND_LEFT_BOTH then
        local shield_cat = -1
        
        if idle_cat0 == 2 and wepCat == WEAPON_CATEGORY_SMALL_SHIELD then
            shield_cat = 4
        elseif idle_cat0 == 3 and wepCat == WEAPON_CATEGORY_SMALL_SHIELD then
            shield_cat = 5
        elseif idle_cat0 == 2 and wepCat == WEAPON_CATEGORY_LARGE_SHIELD then
            shield_cat = 8
        elseif idle_cat0 == 3 and wepCat == WEAPON_CATEGORY_LARGE_SHIELD then
            shield_cat = 9
        end
        
        if shield_cat ~= -1 then
            for i = 1, #SwordArtsCategory[artID], 1 do
                if SwordArtsCategory[artID][i] == shield_cat then
                    act(9000, "GetSwordArtsDiffCategory shield_cat:" .. shield_cat)
                    return shield_cat
                end
            end
        end
    end
    
    for j = 1, #SwordArtsCategory[artID], 1 do
        if SwordArtsCategory[artID][j] == wep_cat0 then
            act(9000, "GetSwordArtsDiffCategory wepCat0:" .. wep_cat0)
            return wep_cat0
        end
    end
    for j = 1, #SwordArtsCategory[artID], 1 do
        if SwordArtsCategory[artID][j] == wep_cat1 then
            act(9000, "GetSwordArtsDiffCategory wepCat1:" .. wep_cat1)
            return wep_cat1
        end
    end
    if artID >= 90 and artID <= 99 and (c_SwordArtsHand ~= HAND_LEFT or c_Style == HAND_LEFT_BOTH) then
        return 0
    end
    for j = 1, #SwordArtsCategory[artID], 1 do
        if SwordArtsCategory[artID][j] == idle_cat0 then
            act(9000, "GetSwordArtsDiffCategory idle_cat0:" .. idle_cat0)
            return idle_cat0
        end
    end
    return 0
end

SwordArtPutOppositeWeapon = {[0] = {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, [5] = {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {FALSE, FALSE, FALSE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, [22] = {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, [50] = {FALSE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, FALSE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, [61] = {TRUE, FALSE, TRUE}, {TRUE, FALSE, FALSE}, {TRUE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, [90] = {TRUE, FALSE, TRUE}, {FALSE, FALSE, FALSE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, TRUE, TRUE}, {FALSE, FALSE, FALSE}, {FALSE, FALSE, FALSE}, {FALSE, FALSE, FALSE}, {FALSE, FALSE, FALSE}, {FALSE, FALSE, FALSE}, [105] = {FALSE, FALSE, FALSE}, {FALSE, FALSE, FALSE}, [108] = {FALSE, FALSE, FALSE}, [110] = {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, [130] = {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, [140] = {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, [150] = {TRUE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, TRUE, TRUE}, [155] = {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, [160] = {FALSE, FALSE, TRUE}, [165] = {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {FALSE, FALSE, FALSE}, {TRUE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, FALSE, FALSE}, {TRUE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, [182] = {FALSE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {FALSE, FALSE, FALSE}, {TRUE, FALSE, FALSE}, {TRUE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, TRUE, FALSE}, {FALSE, FALSE, FALSE}, {FALSE, FALSE, FALSE}, {FALSE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, TRUE, FALSE}, {TRUE, TRUE, FALSE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, FALSE}, {FALSE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, FALSE}, {FALSE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, FALSE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {FALSE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {FALSE, FALSE, FALSE}, {TRUE, FALSE, FALSE}, {TRUE, FALSE, FALSE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, FALSE}, {TRUE, FALSE, TRUE}, {TRUE, FALSE, TRUE}}

function GetSwordArtsPutOppositeWeapon()
    local isSwordArtsPutOppositeWeapon = nil
    
    if c_Style == HAND_RIGHT then
        if HAND_RIGHT == c_SwordArtsHand then
            isSwordArtsPutOppositeWeapon = SwordArtPutOppositeWeapon[c_SwordArtsID][1]
        else
            isSwordArtsPutOppositeWeapon = SwordArtPutOppositeWeapon[c_SwordArtsID][2]
        end
    else
        isSwordArtsPutOppositeWeapon = SwordArtPutOppositeWeapon[c_SwordArtsID][3]
    end
    
    return isSwordArtsPutOppositeWeapon
end

-- Sword Arts
SWORDARTS_ONESHOT_START = 0
SWORDARTS_VERTICAL_SPIN = 0
SWORDARTS_CONCENTRATE = 1
SWORDARTS_SHIELD_SPLITTER = 2
SWORDARTS_SPELL_ATTACK = 3
SWORDARTS_BLOOD_SLASH = 4
SWORDARTS_DRAIN = 5
SWORDARTS_SPINNING_THRUST = 6
SWORDARTS_LAVA = 8
SWORDARTS_HEALING_CRUSH = 9
SWORDARTS_FOOT_STAMP = 11
SWORDARTS_FOOT_STAMP_ICE = 12
SWORDARTS_GRAVITY = 13
SWORDARTS_FIRESTORM = 14
SWORDARTS_GAEBULG = 16
SWORDARTS_THROWING_SPEAR = 17
SWORDARTS_KICK = 18
SWORDARTS_SELF_INJURY = 19
SWORDARTS_CURSED_WEAPON = 20
SWORDARTS_OATH_OF_SUNLIGHT = 21
SWORDARTS_ROLLING_ATTACK = 22
SWORDARTS_PERVERANCE = 23
SWORDARTS_WIND_BARRIER = 25
SWORDARTS_DOUBLE_ATTACK = 26
SWORDARTS_SPINNING_THRUST_2 = 27
SWORDARTS_SUMMON_PHANTOM = 30
SWORDARTS_WAR_CRY = 31
SWORDARTS_ONESHOT_END = 49
SWORDARTS_PARRY = 50
SWORDARTS_SPELL_PARRY = 51
SWORDARTS_PROJECTILE_PARRY = 52
SWORDARTS_SELF_FREEZING = 53
SWORDARTS_SANCTUARY = 54
SWORDARTS_SHIELD_BASH = 55
SWORDARTS_HERCULEAN_REPEL = 56
SWORDARTS_BUCKLER_PARRY = 57
SWORDARTS_DAGGER_PARRY = 58
SWORDARTS_ONESHOT_SHIELD_END = 59
SWORDARTS_SPIN = 60
SWORDARTS_FANNEL_SPIN = 61
SWORDARTS_SPIN_POLE = 62
SWORDARTS_CHARGE = 63
SWORDARTS_STOMP = 64
SWORDARTS_STORM_STOMP = 65
SWORDARTS_DRAIN_COMBO = 66
SWORDARTS_EARTHQUAKE = 67
SWORDARTS_BULLET_APPROACH = 68
SWORDARTS_FLAME_SLASH = 69
SWORDARTS_THUNDER_THRUST = 70
SWORDARTS_PHANTOM_SLASH = 71
SWORDARTS_NEAR_FLAME = 74
SWORDARTS_FLAME_PILLAR = 75
SWORDARTS_SWORD_DANCE_SINGLE = 76
SWORDARTS_SONIC_BOOM = 77
SWORDARTS_ONESHOT_COMBO_END = 99
SWORDARTS_LOOP_START = 100
SWORDARTS_SWORD_DANCE = 100
SWORDARTS_SPEAR_DANCE = 101
SWORDARTS_LIFE_STEAL = 102
SWORDARTS_LOOP_END = 109
SWORDARTS_SOUL_GREATSWORD = 110
SWORDARTS_SELF_INJURY_THRUST = 111
SWORDARTS_CHARGE_END = 119
SWORDARTS_QUICK_STEP = 120
SWORDARTS_GEHRMAN_STEP = 121
SWORDARTS_GEHRMAN_STEP_THUNDER = 122
SWORDARTS_ROLLING_END = 129
SWORDARTS_STAND_DODGE = 130
SWORDARTS_STAND_DODGE_END = 139
SWORDARTS_KATANA_STANCE = 140
SWORDARTS_DRAW_STANCE_END = 149
SWORDARTS_STRONG_SHOT = 150
SWORDARTS_RAPID_FIRE = 151
SWORDARTS_GREATBOW_STRONGSHOT = 152
SWORDARTS_BOW_STANCE_END = 159
SWORDARTS_CHARGE_SHOT = 160
SWORDARTS_CHARGE_SHOT_END = 169
SWORDARTS_ONESHOTHALF = 200
SWORDARTS_TRAMPET_SMALL = 200
SWORDARTS_BATON = 201
SWORDARTS_ONESHOTHALF_END = 249
SWORDARTS_RIGHTARTS = 254
SWORDARTS_INVALID = 255
SWORDARTS_SAMAGIC = 251
SWORDARTS_SAMAGICMEDIUM = 252
SWORDARTS_SAMAGICSTRONG = 253

-- Sword Arts Request
SWORDARTS_REQUEST_LEFT_NORMAL = 1000
SWORDARTS_REQUEST_LEFT_COMBO_1 = 1010
SWORDARTS_REQUEST_LEFT_COMBO_2 = 1020
SWORDARTS_REQUEST_RIGHT_NORMAL = 2000
SWORDARTS_REQUEST_RIGHT_COMBO_1 = 2010
SWORDARTS_REQUEST_RIGHT_COMBO_2 = 2020
SWORDARTS_REQUEST_RIGHT_STANCE = 2050
SWORDARTS_REQUEST_RIGHT_STEP = 2080
SWORDARTS_REQUEST_BOTH_NORMAL = 3000
SWORDARTS_REQUEST_BOTH_COMBO_1 = 3010
SWORDARTS_REQUEST_BOTH_COMBO_2 = 3020
SWORDART_REQUEST_INVALID = 9000

-- Sword Arts Anims
SWORDARTS_ANIM_ID_RIGHT_NORMAL = 40000
SWORDARTS_ANIM_ID_RIGHT_CANCEL_1 = 40001
SWORDARTS_ANIM_ID_RIGHT_CANCEL_2 = 40002
SWORDARTS_ANIM_ID_RIGHT_LOOP = 40003
SWORDARTS_ANIM_ID_RIGHT_LOOP_END = 40004
SWORDARTS_ANIM_ID_RIGHT_NORMAL_NOMP = 40005
SWORDARTS_ANIM_ID_RIGHT_CANCEL_1_NOMP = 40006
SWORDARTS_ANIM_ID_RIGHT_CANCEL_2_NOMP = 40007
SWORDARTS_ANIM_ID_RIGHT_LOOP_NOMP = 40008
SWORDARTS_ANIM_ID_RIGHT_LOOP_END_NOMP = 40009
SWORDARTS_ANIM_ID_RIGHT_COMBO_1 = 40010
SWORDARTS_ANIM_ID_RIGHT_COMBO_1_CANCEL = 40011
SWORDARTS_ANIM_ID_RIGHT_COMBO_1_NOMP = 40015
SWORDARTS_ANIM_ID_RIGHT_COMBO_1_CANCEL_NOMP = 40016
SWORDARTS_ANIM_ID_RIGHT_COMBO_2 = 40020
SWORDARTS_ANIM_ID_RIGHT_COMBO_2_NOMP = 40025
SWORDARTS_ANIM_ID_BOTH_NORMAL = 40030
SWORDARTS_ANIM_ID_BOTH_CANCEL_1 = 40031
SWORDARTS_ANIM_ID_BOTH_CANCEL_2 = 40032
SWORDARTS_ANIM_ID_BOTH_LOOP = 40033
SWORDARTS_ANIM_ID_BOTH_LOOP_END = 40034
SWORDARTS_ANIM_ID_BOTH_NORMAL_NOMP = 40035
SWORDARTS_ANIM_ID_BOTH_CANCEL_1_NOMP = 40036
SWORDARTS_ANIM_ID_BOTH_CANCEL_2_NOMP = 40037
SWORDARTS_ANIM_ID_BOTH_LOOP_NOMP = 40038
SWORDARTS_ANIM_ID_BOTH_LOOP_END_NOMP = 40039
SWORDARTS_ANIM_ID_LEFT_NORMAL = 40040
SWORDARTS_ANIM_ID_LEFT_CANCEL_1 = 40041
SWORDARTS_ANIM_ID_LEFT_CANCEL_2 = 40042
SWORDARTS_ANIM_ID_LEFT_LOOP = 40043
SWORDARTS_ANIM_ID_LEFT_LOOP_END = 40044
SWORDARTS_ANIM_ID_LEFT_NORMAL_NOMP = 40045
SWORDARTS_ANIM_ID_LEFT_CANCEL_1_NOMP = 40046
SWORDARTS_ANIM_ID_LEFT_CANCEL_2_NOMP = 40047
SWORDARTS_ANIM_ID_LEFT_LOOP_NOMP = 40048
SWORDARTS_ANIM_ID_LEFT_LOOP_END_NOMP = 40049
SWORDARTS_ANIM_ID_RIGHT_STANCE_START = 40050
SWORDARTS_ANIM_ID_RIGHT_STANCE_LOOP = 40051
SWORDARTS_ANIM_ID_RIGHT_STANCE_MOVE = 40052
SWORDARTS_ANIM_ID_RIGHT_STANCE_END = 40053
SWORDARTS_ANIM_ID_RIGHT_STANCE_START_NOMP = 40055
SWORDARTS_ANIM_ID_RIGHT_STANCE_LOOP_NOMP = 40056
SWORDARTS_ANIM_ID_RIGHT_STANCE_MOVE_NOMP = 40057
SWORDARTS_ANIM_ID_RIGHT_STANCE_END_NOMP = 40058
SWORDARTS_ANIM_ID_RIGHT_STANCE_ATTACK_LIGHT = 40060
SWORDARTS_ANIM_ID_RIGHT_STANCE_ATTACK_LIGHT_CANCEL = 40061
SWORDARTS_ANIM_ID_RIGHT_STANCE_ATTACK_LIGHT_180 = 40062
SWORDARTS_ANIM_ID_RIGHT_STANCE_ATTACK_LIGHT_START = 40063
SWORDARTS_ANIM_ID_RIGHT_STANCE_ATTACK_LIGHT_NOMP = 40065
SWORDARTS_ANIM_ID_RIGHT_STANCE_ATTACK_LIGHT_CANCEL_NOMP = 40066
SWORDARTS_ANIM_ID_RIGHT_STANCE_ATTACK_LIGHT_180_NOMP = 40067
SWORDARTS_ANIM_ID_RIGHT_STANCE_ATTACK_LIGHT_START_NOMP = 40068
SWORDARTS_ANIM_ID_RIGHT_STANCE_ATTACK_HEAVY = 40070
SWORDARTS_ANIM_ID_RIGHT_STANCE_ATTACK_HEAVY_CANCEL = 40071
SWORDARTS_ANIM_ID_RIGHT_STANCE_ATTACK_HEAVY_180 = 40072
SWORDARTS_ANIM_ID_RIGHT_STANCE_ATTACK_HEAVY_START = 40073
SWORDARTS_ANIM_ID_RIGHT_STANCE_ATTACK_HEAVY_NOMP = 40075
SWORDARTS_ANIM_ID_RIGHT_STANCE_ATTACK_HEAVY_CANCEL_NOMP = 40076
SWORDARTS_ANIM_ID_RIGHT_STANCE_ATTACK_HEAVY_180_NOMP = 40077
SWORDARTS_ANIM_ID_RIGHT_STANCE_ATTACK_HEAVY_START_NOMP = 40078
SWORDARTS_ANIM_ID_RIGHT_STEP_FRONT = 40080
SWORDARTS_ANIM_ID_RIGHT_STEP_BACK = 40081
SWORDARTS_ANIM_ID_RIGHT_STEP_LEFT = 40082
SWORDARTS_ANIM_ID_RIGHT_STEP_RIGHT = 40083
SWORDARTS_ANIM_ID_RIGHT_STEP_FRONT_NOMP = 40085
SWORDARTS_ANIM_ID_RIGHT_STEP_BACK_NOMP = 40086
SWORDARTS_ANIM_ID_RIGHT_STEP_LEFT_NOMP = 40087
SWORDARTS_ANIM_ID_RIGHT_STEP_RIGHT_NOMP = 40088

-- Throw
THROW_STATE_INVALID = 255
THROW_STATE_DEFAULT = 0
THROW_STATE_STEALTH = 2
THROW_REQUEST = 0
THROW_DAMAGE = 1
THROW_NO_REQUEST = 2

-- Guard
GUARD_STYLE_DEFAULT = 0
GUARD_STYLE_SMALL = 1
GUARD_STYLE_LARGE = 2
GUARD_STYLE_TORCH = 3

-- Frame
START_FRAME_ALL = 0
START_FRAME_A02 = 1
START_FRAME_NONE = 2

-- TAE
TAE_FLAG_GUARD_CANCEL = 0
TAE_FLAG_STATE_END = 2
TAE_FLAG_DISENABLE_GUARD = 4
TAE_FLAG_CHARGING = 5
TAE_FLAG_THROWING = 10
TAE_FLAG_ENABLE_POWER_RAGDOLL = 20
TAE_FLAG_POWER_RAGDOLL_BLEND_FRACTION = 21
TAE_FLAG_BACKSTEP = 50
TAE_FLAG_WEAPONCHANGE_END = 51

-- Ceremony
CEREMONY_STATE_IDLE = 1
CEREMONY_STATE_MOVE = 2
CEREMONY_STATE_RELEASE = 3
CEREMONY_STATE_FORCE_RELEASE = 3

-- Globals
g_FrameCount = 0
g_IsForceReturn = FALSE
g_r1 = nil
g_r2 = nil
g_l1 = nil
g_l2 = nil
g_b1 = nil
g_b2 = nil
g_ArrowSlot = 0
g_IsMagicCharge = 0
g_TimeActEditor_00 = 0
g_TimeActEditor_01 = 0
g_TimeActEditor_02 = 0
g_TimeActEditor_03 = 0
g_TimeActEditor_04 = 0
g_TimeActEditor_05 = 0
g_TimeActEditor_06 = 0
g_TimeActEditor_07 = 0
g_TimeActEditor_08 = 0
g_TimeActEditor_09 = 0
g_TimeActEditor_10 = 0
g_TimeActEditor_11 = 0
g_TimeActEditor_12 = 0
g_TimeActEditor_13 = 0
g_TimeActEditor_14 = 0
g_TimeActEditor_15 = 0
g_MagicIndex = 255
g_Magichand = 1
Flag_LadderDamage = LADDER_DAMAGE_NONE
Flag_LadderJump = LADDER_JUMP_INVALID
c_HasActionRequest = FALSE
c_SwordArtsHand = 0
c_SwordArtsID = 0
c_IsEnableSwordArt = FALSE
c_IsFemale = FALSE
c_Style = 0
c_IsStealth = FALSE
LADDER_DAMAGE_NONE = 0
LADDER_DAMAGE_SMALL = 1
LADDER_DAMAGE_LARGE = 2
dash_dt_sum = 0
ACCELERATION_SPEED_DOWN = 3
ACCELERATION_WALK_SPEED_UP = 3
ACCELERATION_DASH_SPEED_UP = 6
ACCELERATION_DASH_SPEED_UP = 4.5
INTERRUPT_FINDATTACK = 0
INTERRUPT_USEITEM = 1
GUARD_DEF0 = 0
MOVE_DEF0 = 1
QUICKTURN_DEF0 = 3
HANDCHANGE_DEF0 = 4
WEAPONCHANGE_DEF0 = 5
ATTACKARROWRIGHT_DEF0 = 6
ATTACKARROWLEFT_DEF0 = 7
DRAWSTANCERIGHT_DEF0 = 8
SWORDARTSARROW_DEF0 = 9
CHAINSHOTLEFT_DEF0 = 10
MAGIC_DEF0 = 11
ITEM_DEF0 = 12
ATTACKCROSSBOWRIGHT_DEF0 = 13
ATTACKCROSSBOWLEFT_DEF0 = 14
ATTACKCROSSBOWBOTHRIGHT_DEF0 = 15
ATTACKCROSSBOWBOTHLEFT_DEF0 = 16
MOVECEREMONY_DEF0 = 17
WIDESHOTRIGHT_DEF0 = 18
WIDESHOTLEFT_DEF0 = 19
CHAINRECOVER_DEF0 = 20
USEGENTRANSITION_DEF0 = 21
GESTURE_DEF0 = 22
MAGICBUFFRIGHT_DEF0 = 23
MAGICBUFFLEFT_DEF0 = 24
STOPHALFBLEND_DEF0 = 90
STEALTHMOVE_DEF0 = 92
STEALTHITEM_DEF0 = 100
STEALTH_HANDCHANGE_DEF0 = 106
STEALTH_WEAPONCHANGE_DEF0 = 107
STEALTH_NONE = 0
STEALTH_IDLE = 1
STEALTH_TO_STEALTHIDLE = 2
STEALTH_TO_IDLE = 3
STEALTH_ATTACK_ARROWSHOT = 11
STEALTH_STOP = 13
STEALTH_ROLLING = 14
STEALTH_ROLLING_SELFTRANS = 15
SWORDARTHALF_DEF0 = 104
SWORDARTSSHIELDSTANCE_DEF0 = 102
STEALTHSTOP_DEF0 = 97
STEALTHATTACKCROSSBOWRIGHT_DEF0 = 93
STEALTHATTACKCROSSBOWLEFT_DEF0 = 94
STEALTHATTACKCROSSBOWBOTHRIGHT_DEF0 = 95
STEALTHATTACKCROSSBOWBOTHLEFT_DEF0 = 96
STEALTHATTACKARROW_DEF0 = 98
PLAYMUSIC_DEF0 = 91
BACKSTEP_DEF0 = 26
STEALTHITEM_DEF0 = 100
RIDEMAGIC_DEF0 = 100
GUARDSTART_DEF1 = 0
GUARDEND_DEF1 = 1
GUARDON_DEF1 = 2
HANDCHANGESTART_DEF1 = 0
HANDCHANGEEND_DEF1 = 1
HANDCHANGESTARTMIRROR_DEF1 = 2
HANDCHANGEENDMIRROR_DEF1 = 3
WEAPONCHANGESTART_DEF1 = 0
WEAPONCHANGEEND_DEF1 = 1
WEAPONCHANGESTARTMIRROR_DEF1 = 2
WEAPONCHANGEENDMIRROR_DEF1 = 3
BACKSTEP_DEF1 = 0
ATTACKARROWRIGHTSTART_DEF1 = 0
ATTACKARROWRIGHTLOOP_DEF1 = 1
ATTACKARROWRIGHTSTARTMIRROR_DEF1 = 2
ATTACKARROWRIGHTSTARTCONTINUE_DEF1 = 3
ATTACKARROWRIGHTFIREMOVE_DEF1 = 4
ATTACKARROWLEFTSTART_DEF1 = 0
ATTACKARROWLEFTLOOP_DEF1 = 1
ATTACKARROWLEFTSTARTMIRROR_DEF1 = 2
ATTACKARROWLEFTSTARTCONTINUE_DEF1 = 3
ATTACKARROWLEFTFIREMOVE_DEF1 = 4
DRAWSTANCERIGHTSTART_DEF1 = 0
DRAWSTANCERIGHTEND_DEF1 = 1
DRAWSTANCERIGHTLOOP_DEF1 = 2
DRAWSTANCERIGHTLOOPNOSYNC_DEF1 = 3
DRAWSTANCERIGHTLOOPNMAXNOSYNC_DEF1 = 4
SWORDARTSSHIELDSTANCERIGHTSTART_DEF1 = 0
SWORDARTSSHIELDSTANCERIGHTEND_DEF1 = 1
SWORDARTSSHIELDSTANCERIGHTLOOP_DEF1 = 2
SWORDARTSSHIELDSTANCELEFTSTART_DEF1 = 3
SWORDARTSSHIELDSTANCELEFTEND_DEF1 = 4
SWORDARTSSHIELDSTANCELEFTLOOP_DEF1 = 5
SWORDARTSONESHOTHALF_DEF1 = 0
SWORDARTSONESHOTHALF_COMBO1_DEF1 = 1
SWORDARTSONESHOTHALF_COMBO2_DEF1 = 2
SWORDARTSONESHOTHALF_LOOP_DEF1 = 3
SWORDARTSONESHOTHALF_LOOP_END_DEF1 = 4
SWORDARTSONESHOTHALF_LEFT_DEF1 = 5
SWORDARTSONESHOTHALF_LEFT_LOOP_DEF1 = 6
SWORDARTSONESHOTHALF_LEFT_LOOP_END_DEF1 = 7
SWORDARTSARROWSTART_DEF1 = 0
SWORDARTSARROWEND_DEF1 = 1
SWORDARTSARROWLOOP_DEF1 = 2
SWORDARTSARROWDRAWSTART_DEF1 = 3
SWORDARTSARROWDRAWLOOP_DEF1 = 4
QUICKTURN_LEFT180_DEF1 = 0
QUICKTURN_RIGHT180_DEF1 = 1
QUICKTURN_LEFT180MIRROR_DEF1 = 2
QUICKTURN_RIGHT180MIRROR_DEF1 = 3
CHAINRECOVER_DEF1 = 0
CHAINRECOVERMIRROR_DEF1 = 1
MAGICLAUNCHLEFT_DEF1 = 0
MAGICLAUNCHRIGHT_DEF1 = 1
MAGICLAUNCHLEFTSA_DEF1 = 4
MAGICLAUNCHRIGHTSA_DEF1 = 5
MAGICLOOPLEFT_DEF1 = 6
MAGICLOOPRIGHT_DEF1 = 7
MAGICLOOPLEFTSA_DEF1 = 8
MAGICLOOPRIGHTSA_DEF1 = 9
MAGICFIRELEFT_DEF1 = 10
MAGICFIRERIGHT_DEF1 = 11
MAGICFIRERIGHT2_DEF1 = 12
MAGICFIRELEFT2_DEF1 = 13
MAGICFIRERIGHT3_DEF1 = 14
MAGICFIRELEFT3_DEF1 = 15
QUICKMAGICFIRELEFTNORMAL_DEF1 = 20
QUICKMAGICFIRELEFTDASH_DEF1 = 21
QUICKMAGICFIRELEFTSTEP_DEF1 = 22
QUICKMAGICFIRELEFTATTACKRIGHT_DEF1 = 23
QUICKMAGICFIRELEFTATTACKLEFT_DEF1 = 24
QUICKMAGICFIRELEFTATTACKRIGHT2_DEF1 = 25
QUICKMAGICFIRELEFTATTACKLEFT2_DEF1 = 26
QUICKMAGICFIRELEFTBACKSTEP_DEF1 = 27
QUICKMAGICFIRERIGHTNORMAL_DEF1 = 30
QUICKMAGICFIRERIGHTDASH_DEF1 = 31
QUICKMAGICFIRERIGHTSTEP_DEF1 = 32
QUICKMAGICFIRERIGHTATTACKRIGHT_DEF1 = 33
QUICKMAGICFIRERIGHTATTACKLEFT_DEF1 = 34
QUICKMAGICFIRERIGHTATTACKRIGHT2_DEF1 = 35
QUICKMAGICFIRERIGHTATTACKLEFT2_DEF1 = 36
QUICKMAGICFIRERIGHTBACKSTEP_DEF1 = 37
MAGICFIRELEFTMAX_DEF1 = 50
MAGICFIRELEFTMAX2_DEF1 = 98
MAGICFIRELEFTMAX3_DEF1 = 99
MAGICFIRERIGHTMAX_DEF1 = 55
MAGICFIRERIGHTMAX2_DEF1 = 92
MAGICFIRERIGHTMAX3_DEF1 = 93
MAGICINVALID_DEF1 = 90
MAGICINVALIDMIRROR_DEF1 = 91
STEALTHMAGICRIGHTLAUNCH_DEF1 = 100
STEALTHMAGICRIGHTFIRE_DEF1 = 101
STEALTHMAGICLEFTLAUNCH_DEF1 = 102
STEALTHMAGICLEFTFIRE_DEF1 = 103
ITEMNORMAL_DEF1 = 0
ITEMQUICK_DEF1 = 1
ITEMONESHOT_DEF1 = 2
ITEMDASH_DEF1 = 3
ITEMCOMBO_DEF1 = 4
ITEMONESHOTSELFTRANS_DEF1 = 5
ITEMWEAPONENCHANT_DEF2 = 0
ITEMTHROWKNIFE_DEF2 = 1
ITEMTHROWBOTTLE_DEF2 = 2
ITEMMEGANESTART_DEF2 = 3
ITEMMEGANELOOP_DEF2 = 4
ITEMMEGANEEND_DEF2 = 5
ITEMWEAPONREPAIR_DEF2 = 6
ITEMSOUL_DEF2 = 7
ITEMDRINKSTART_DEF2 = 8
ITEMDRINKNOTHING_DEF2 = 9
ITEMDRINKING_DEF2 = 10
ITEMDRINKEND_DEF2 = 11
ITEM_INVALID_DEF2 = 12
ITEMSHOCKWAVESTART_DEF2 = 13
ITEMSHOCKWAVEEND_DEF2 = 14
ITEMRECOVER_DEF2 = 15
ITEMMESSAGE_DEF2 = 16
ITEMPRAY_DEF2 = 17
ITEMTRAP_DEF2 = 18
ITEMDRINKSTARTMP_DEF2 = 19
ITEMDRINKINGMP_DEF2 = 20
ITEMSUMMONSTART_DEF2 = 21
ITEMSUMMONING_DEF2 = 22
ITEMSUMMONEND_DEF2 = 23
ITEMTHROWSPEAR_DEF2 = 24
ITEMDRINKEMPTY_DEF2 = 25
ITEMDRAGONHEADSTARTAFTER_DEF2 = 26
ITEMEATJERKY_DEF2 = 27
ITEMLANTERNON_DEF2 = 28
ITEMLANTERNOFF_DEF2 = 29
ITEMELIXIR_DEF2 = 30
ITEMHORN_DEF2 = 31
ITEMPRAYMULTI_DEF2 = 32
ITEMSUMMONBUDDY_DEF2 = 33
ITEMTHROWBACKBOTTLE_DEF2 = 34
ITEMCOPYSLEEP_DEF2 = 35
ITEMVOICE_DEF2 = 36
ITEMRETURNBUDDY_DEF2 = 37
ITEMAROMAWIDE_DEF2 = 38
ITEMAROMAUP_DEF2 = 39
ITEMAROMADRINK_DEF2 = 40
ITEMAROMABREATH_DEF2 = 41
ITEMHOST_DEF2 = 42
ITEMMULTIKICK_DEF2 = 43
ITEMTONGUE_DEF2 = 44
ITEMHOLYSYMBOL_DEF2 = 45
ITEMAROMAFRONT_DEF2 = 46
ITEMSIGNPOOL_DEF2 = 47
QUICK_ITEM_WEAPON_ENCHANT_DEF2 = 0
QUICK_ITEM_THROW_KNIFE_DEF2 = 1
QUICK_ITEMTHROWBOTTLE_DEF2 = 2
QUICK_ITEM_THROW_KNIFE_NORMAL_DEF3 = 0
QUICK_ITEM_THROW_KNIFE_DASH_DEF3 = 1
QUICK_ITEM_THROW_KNIFE_STEP_DEF3 = 2
QUICK_ITEM_THROW_KNIFE_ATTACK_RIGHT_DEF3 = 3
QUICK_ITEM_THROW_KNIFE_ATTACK_LEFT_DEF3 = 4
QUICK_ITEM_THROW_KNIFE_ATTACK_RIGHT2_DEF3 = 5
QUICK_ITEM_THROW_KNIFE_ATTACK_LEFT2_DEF3 = 6
QUICK_ITEM_ENCHANT_NORMAL_DEF3 = 0
QUICK_ITEM_ENCHANT_DASH_DEF3 = 1
QUICK_ITEM_ENCHANT_STEP_DEF3 = 2
QUICK_ITEM_ENCHANT_ATTACK_RIGHT_DEF3 = 3
QUICK_ITEM_ENCHANT_ATTACK_LEFT_DEF3 = 4
ATTACKCROSSBOWRIGHTSTART_DEF1 = 0
ATTACKCROSSBOWRIGHTFIRE_DEF1 = 1
ATTACKCROSSBOWRIGHTEMPTY_DEF1 = 2
ATTACKCROSSBOWRIGHTRELOAD_DEF1 = 3
ATTACKCROSSBOWRIGHTLOOP_DEF1 = 4
ATTACKCROSSBOWLEFTSTART_DEF1 = 0
ATTACKCROSSBOWLEFTFIRE_DEF1 = 1
ATTACKCROSSBOWLEFTEMPTY_DEF1 = 2
ATTACKCROSSBOWLEFTRELOAD_DEF1 = 3
ATTACKCROSSBOWLEFTLOOP_DEF1 = 4
ATTACKCROSSBOWBOTHLEFTSTART_DEF1 = 0
ATTACKCROSSBOWBOTHLEFTFIRE_DEF1 = 1
ATTACKCROSSBOWBOTHLEFTEMPTY_DEF1 = 2
ATTACKCROSSBOWBOTHLEFTRELOAD_DEF1 = 3
ATTACKCROSSBOWBOTHLEFTLOOP_DEF1 = 4
ATTACKCROSSBOWBOTHRIGHTSTART_DEF1 = 0
ATTACKCROSSBOWBOTHRIGHTFIRE_DEF1 = 1
ATTACKCROSSBOWBOTHRIGHTEMPTY_DEF1 = 2
ATTACKCROSSBOWBOTHRIGHTRELOAD_DEF1 = 3
ATTACKCROSSBOWBOTHRIGHTLOOP_DEF1 = 4
ATTACKCROSSBOWBOTHRIGHTSTARTCONTINUE_DEF1 = 5
WIDESHOTRIGHTSTART_DEF1 = 0
WIDESHOTRIGHTLOOP_DEF1 = 1
WIDESHOTRIGHTRELEASE_DEF1 = 2
WIDESHOTRIGHTSTARTMIRROR_DEF1 = 3
WIDESHOTLEFTSTART_DEF1 = 0
WIDESHOTLEFTLOOP_DEF1 = 1
WIDESHOTLEFTRELEASE_DEF1 = 2
WIDESHOTLEFTSTARTMIRROR_DEF1 = 3
ATTACKSPIN_DEF1 = 0
CHARGE_DEF1 = 1
STEPINRIGHTSTART_DEF1 = 2
CROSSBOWSTEPINSTART_DEF1 = 3
HEADHUNT_DEF1 = 4
ONESHOT_DEF1 = 5
GESTURESTART_DEF1 = 0
GESTURELOOP_DEF1 = 1
GESTUREEND_DEF1 = 2
GESTURELOOPSTART_DEF1 = 1
MAGICBUFFRIGHT_DEF1 = 0
MAGICBUFFRIGHTMIRROR_DEF1 = 1
MAGICBUFFLEFT_DEF1 = 0
MAGICBUFFLEFTMIRROR_DEF1 = 1
STOPHALFBLENDDASH_DEF1 = 0
STOPHALFBLENDRUNFRONT_DEF1 = 10
STOPHALFBLENDRUNBACK_DEF1 = 11
STOPHALFBLENDRUNLEFT_DEF1 = 12
STOPHALFBLENDRUNRIGHT_DEF1 = 13
STOPHALFBLENDWALKFRONT_DEF1 = 20
STOPHALFBLENDWALKBACK_DEF1 = 21
STOPHALFBLENDWALKLEFT_DEF1 = 22
STOPHALFBLENDWALKRIGHT_DEF1 = 23
STOPHALFBLENDDASH180_DEF1 = 30
STEALTH_HANDCHANGESTART_DEF1 = 0
STEALTH_HANDCHANGEEND_DEF1 = 1
STEALTH_WEAPONCHANGESTART_DEF1 = 0
STEALTH_WEAPONCHANGEEND_DEF1 = 1
STEALTHATTACKCROSSBOWRIGHTSTART_DEF1 = 0
STEALTHATTACKCROSSBOWRIGHTFIRE_DEF1 = 1
STEALTHATTACKCROSSBOWRIGHTEMPTY_DEF1 = 2
STEALTHATTACKCROSSBOWRIGHTRELOAD_DEF1 = 3
STEALTHATTACKCROSSBOWRIGHTLOOP_DEF1 = 4
STEALTHATTACKCROSSBOWLEFTSTART_DEF1 = 0
STEALTHATTACKCROSSBOWLEFTFIRE_DEF1 = 1
STEALTHATTACKCROSSBOWLEFTEMPTY_DEF1 = 2
STEALTHATTACKCROSSBOWLEFTRELOAD_DEF1 = 3
STEALTHATTACKCROSSBOWLEFTLOOP_DEF1 = 4
STEALTHATTACKCROSSBOWBOTHLEFTSTART_DEF1 = 0
STEALTHATTACKCROSSBOWBOTHLEFTFIRE_DEF1 = 1
STEALTHATTACKCROSSBOWBOTHLEFTEMPTY_DEF1 = 2
STEALTHATTACKCROSSBOWBOTHLEFTRELOAD_DEF1 = 3
STEALTHATTACKCROSSBOWBOTHLEFTLOOP_DEF1 = 4
STEALTHATTACKCROSSBOWBOTHRIGHTSTART_DEF1 = 0
STEALTHATTACKCROSSBOWBOTHRIGHTFIRE_DEF1 = 1
STEALTHATTACKCROSSBOWBOTHRIGHTEMPTY_DEF1 = 2
STEALTHATTACKCROSSBOWBOTHRIGHTRELOAD_DEF1 = 3
STEALTHATTACKCROSSBOWBOTHRIGHTLOOP_DEF1 = 4
STEALTHATTACKARROWSTART_DEF1 = 0
STEALTHATTACKARROWLOOP_DEF1 = 1
STEALTHATTACKARROWSTARTMIRROR_DEF1 = 2
STEALTHATTACKARROWSTARTCONTINUE_DEF1 = 3
STEALTHITEMDRINKSTART_DEF1 = 8
STEALTHITEMDRINKNOTHING_DEF1 = 9
STEALTHITEMDRINKING_DEF1 = 10
STEALTHITEMDRINKEND_DEF1 = 11
STEALTHITEMDRINKEMPTY_DEF1 = 25
STEALTHITEMONESHOT_DEF1 = 26
STEALTHITEMONESHOT_SELFTRANS_DEF1 = 27
RIDEMAGICLAUNCH_DEF1 = 0
RIDEMAGICFIRE_DEF1 = 1
EVENTHALFBLEND_DEF0 = 103
EVENTHALFBLEND60071_DEF1 = 0
EVENTHALFBLEND360070_DEF1 = 1
IDX_AINOTE_STYLE = 0
IDX_AINOTE_STATETYPE = 1
IDX_AINOTE_STYLE_DEFAULT = 0
IDX_AINOTE_STYLE_GUARD = 1
IDX_AINOTE_STYLE_PARRY = 2
IDX_AINOTE_STATETYPE_CHARGEMAGIC = 1
IDX_AINOTE_STATETYPE_JUMP_NONATTACK = 2
Event_GuardStart = {"W_GuardStart", GUARD_DEF0, GUARDSTART_DEF1}
Event_GuardEnd = {"W_GuardEnd", GUARD_DEF0, GUARDEND_DEF1}
Event_GuardOn = {"W_GuardOn", GUARD_DEF0, GUARDON_DEF1}
Event_Move = {"W_Move", MOVE_DEF0}
Event_MoveLong = {"W_MoveLong", MOVE_DEF0}
Event_MoveCult = {"W_MoveCult", MOVECEREMONY_DEF0}
Event_MoveNoSync = {"W_MoveNoSync", MOVE_DEF0}
Event_Stealth_Move = {"W_Stealth_Move", STEALTHMOVE_DEF0}
Event_HandChangeStart = {"W_HandChangeStart", HANDCHANGE_DEF0, HANDCHANGESTART_DEF1}
Event_HandChangeEnd = {"W_HandChangeEnd", HANDCHANGE_DEF0, HANDCHANGEEND_DEF1}
Event_HandChangeStartMirror = {"W_HandChangeStart_mirror", HANDCHANGE_DEF0, HANDCHANGESTARTMIRROR_DEF1}
Event_HandChangeEndMirror = {"W_HandChangeEnd_mirror", HANDCHANGE_DEF0, HANDCHANGEENDMIRROR_DEF1}
Event_StealthHandChangeStart = {"W_StealthHandChangeStart", STEALTH_HANDCHANGE_DEF0, STEALTH_HANDCHANGESTART_DEF1}
Event_StealthHandChangeEnd = {"W_StealthHandChangeEnd", STEALTH_HANDCHANGE_DEF0, STEALTH_HANDCHANGEEND_DEF1}
Event_WeaponChangeStart = {"W_WeaponChangeStart", WEAPONCHANGE_DEF0, WEAPONCHANGESTART_DEF1}
Event_WeaponChangeEnd = {"W_WeaponChangeEnd", WEAPONCHANGE_DEF0, WEAPONCHANGEEND_DEF1}
Event_WeaponChangeStartMirror = {"W_WeaponChangeStart_mirror", WEAPONCHANGE_DEF0, WEAPONCHANGESTARTMIRROR_DEF1}
Event_WeaponChangeEndMirror = {"W_WeaponChangeEnd_mirror", WEAPONCHANGE_DEF0, WEAPONCHANGEENDMIRROR_DEF1}
Event_StealthWeaponChangeStart = {"W_StealthWeaponChangeStart", STEALTH_WEAPONCHANGE_DEF0, STEALTH_WEAPONCHANGESTART_DEF1}
Event_StealthWeaponChangeEnd = {"W_StealthWeaponChangeEnd", STEALTH_WEAPONCHANGE_DEF0, STEALTH_WEAPONCHANGEEND_DEF1}
Event_BackStep = {"W_BackStepHalf", BACKSTEP_DEF0, BACKSTEP_DEF1}
Event_AttackArrowRightStart = {"W_AttackArrowRightStart", ATTACKARROWRIGHT_DEF0, ATTACKARROWRIGHTSTART_DEF1}
Event_AttackArrowRightStartContinue = {"W_AttackArrowRightStartContinue", ATTACKARROWRIGHT_DEF0, ATTACKARROWRIGHTSTARTCONTINUE_DEF1}
Event_AttackArrowRightLoop = {"W_AttackArrowRightLoop", ATTACKARROWRIGHT_DEF0, ATTACKARROWRIGHTLOOP_DEF1}
Event_AttackArrowRightFireMove = {"W_AttackArrowRightFireMove", ATTACKARROWRIGHT_DEF0, ATTACKARROWRIGHTFIREMOVE_DEF1}
Event_AttackArrowLeftStart = {"W_AttackArrowLeftStart", ATTACKARROWLEFT_DEF0, ATTACKARROWLEFTSTART_DEF1}
Event_AttackArrowLeftStartContinue = {"W_AttackArrowLeftStartContinue", ATTACKARROWLEFT_DEF0, ATTACKARROWLEFTSTARTCONTINUE_DEF1}
Event_AttackArrowLeftLoop = {"W_AttackArrowLeftLoop", ATTACKARROWLEFT_DEF0, ATTACKARROWLEFTLOOP_DEF1}
Event_AttackArrowLeftFireMove = {"W_AttackArrowLeftFireMove", ATTACKARROWLEFT_DEF0, ATTACKARROWLEFTFIREMOVE_DEF1}
Event_DrawStanceRightStart = {"W_DrawStanceRightStart", DRAWSTANCERIGHT_DEF0, DRAWSTANCERIGHTSTART_DEF1}
Event_DrawStanceRightEnd = {"W_DrawStanceRightEnd", DRAWSTANCERIGHT_DEF0, DRAWSTANCERIGHTEND_DEF1}
Event_DrawStanceRightLoop = {"W_DrawStanceRightLoop", DRAWSTANCERIGHT_DEF0, DRAWSTANCERIGHTLOOP_DEF1}
Event_DrawStanceNoSyncLoop = {"W_DrawStanceNoSyncLoop", DRAWSTANCERIGHT_DEF0, DRAWSTANCERIGHTLOOPNOSYNC_DEF1}
Event_DrawStanceNoSyncLoopMax = {"W_DrawStanceNoSyncLoopMax", DRAWSTANCERIGHT_DEF0, DRAWSTANCERIGHTLOOPMAXNOSYNC_DEF1}
Event_SwordArtsArrowStanceStart = {"W_SwordArtsArrowStanceStart", SWORDARTSARROW_DEF0, SWORDARTSARROWSTART_DEF1}
Event_SwordArtsArrowStanceEnd = {"W_SwordArtsArrowStanceEnd", SWORDARTSARROW_DEF0, SWORDARTSARROWEND_DEF1}
Event_SwordArtsArrowStanceLoop = {"W_SwordArtsArrowStanceLoop", SWORDARTSARROW_DEF0, SWORDARTSARROWLOOP_DEF1}
Event_SwordArtsArrowDrawStart = {"W_SwordArtsArrowDrawStart", SWORDARTSARROW_DEF0, SWORDARTSARROWDRAWSTART_DEF1}
Event_SwordArtsArrowDrawLoop = {"W_SwordArtsArrowDrawLoop", SWORDARTSARROW_DEF0, SWORDARTSARROWDRAWLOOP_DEF1}
Event_StealthAttackArrowStart = {"W_StealthAttackArrowStart", STEALTHATTACKARROW_DEF0, STEALTHATTACKARROWSTART_DEF1}
Event_StealthAttackArrowStartContinue = {"W_StealthAttackArrowStartContinue", STEALTHATTACKARROW_DEF0, STEALTHATTACKARROWSTARTCONTINUE_DEF1}
Event_StealthAttackArrowLoop = {"W_StealthAttackArrowLoop", STEALTHATTACKARROW_DEF0, STEALTHATTACKARROWLOOP_DEF1}
Event_QuickTurnLeft180 = {"W_QuickTurnLeft180", QUICKTURN_DEF0, QUICKTURN_LEFT180_DEF1}
Event_QuickTurnRight180 = {"W_QuickTurnRight180", QUICKTURN_DEF0, QUICKTURN_RIGHT180_DEF1}
Event_QuickTurnLeft180Mirror = {"W_QuickTurnLeft180_mirror", QUICKTURN_DEF0, QUICKTURN_LEFT180MIRROR_DEF1}
Event_QuickTurnRight180Mirror = {"W_QuickTurnRight180_mirror", QUICKTURN_DEF0, QUICKTURN_RIGHT180MIRROR_DEF1}
Event_MagicLaunchLeft = {"W_MagicLaunchLeft", MAGIC_DEF0, MAGICLAUNCHLEFT_DEF1}
Event_MagicFireLeft = {"W_MagicFireLeft", MAGIC_DEF0, MAGICFIRELEFT_DEF1}
Event_MagicLoopLeft = {"W_MagicLoopLeft", MAGIC_DEF0, MAGICLOOPLEFT_DEF1}
Event_MagicFireLeftCancel = {"W_MagicFireLeftCancel", MAGIC_DEF0, MAGICFIRELEFTMAX_DEF1}
Event_MagicFireLeft2 = {"W_MagicFireLeft2", MAGIC_DEF0, MAGICFIRELEFT2_DEF1}
Event_MagicFireLeftCancel2 = {"W_MagicFireLeftCancel2", MAGIC_DEF0, MAGICFIRELEFTMAX2_DEF1}
Event_MagicFireLeft3 = {"W_MagicFireLeft3", MAGIC_DEF0, MAGICFIRELEFT3_DEF1}
Event_MagicFireLeftCancel3 = {"W_MagicFireLeftCancel3", MAGIC_DEF0, MAGICFIRELEFTMAX3_DEF1}
Event_MagicFireLeftJump = {"W_MagicFireLeftJump", MAGIC_DEF0, 94}
Event_MagicFireLeftJumpCancel = {"W_MagicFireLeftJumpCancel", MAGIC_DEF0, 96}
Event_MagicLaunchRight = {"W_MagicLaunchRight", MAGIC_DEF0, MAGICLAUNCHRIGHT_DEF1}
Event_MagicFireRight = {"W_MagicFireRight", MAGIC_DEF0, MAGICFIRERIGHT_DEF1}
Event_MagicLoopRight = {"W_MagicLoopRight", MAGIC_DEF0, MAGICLOOPRIGHT_DEF1}
Event_MagicFireRightCancel = {"W_MagicFireRightCancel", MAGIC_DEF0, MAGICFIRERIGHTMAX_DEF1}
Event_MagicFireRight2 = {"W_MagicFireRight2", MAGIC_DEF0, MAGICFIRERIGHT2_DEF1}
Event_MagicFireRightCancel2 = {"W_MagicFireRightCancel2", MAGIC_DEF0, MAGICFIRERIGHTMAX2_DEF1}
Event_MagicFireRight3 = {"W_MagicFireRight3", MAGIC_DEF0, MAGICFIRERIGHT3_DEF1}
Event_MagicFireRightCancel3 = {"W_MagicFireRightCancel3", MAGIC_DEF0, MAGICFIRERIGHTMAX3_DEF1}
Event_MagicFireRightJump = {"W_MagicFireRightJump", MAGIC_DEF0, 95}
Event_MagicFireRightJumpCancel = {"W_MagicFireRightJumpCancel", MAGIC_DEF0, 97}
Event_QuickMagicFireLeftNormal = {"W_QuickMagicFireLeftNormal", MAGIC_DEF0, QUICKMAGICFIRELEFTNORMAL_DEF1}
Event_QuickMagicFireLeftDash = {"W_QuickMagicFireLeftDash", MAGIC_DEF0, QUICKMAGICFIRELEFTDASH_DEF1}
Event_QuickMagicFireLeftStep = {"W_QuickMagicFireLeftStep", MAGIC_DEF0, QUICKMAGICFIRELEFTSTEP_DEF1}
Event_QuickMagicFireLeftAttackRight = {"W_QuickMagicFireLeftAttackRight", MAGIC_DEF0, QUICKMAGICFIRELEFTATTACKRIGHT_DEF1}
Event_QuickMagicFireLeftAttackRight2 = {"W_QuickMagicFireLeftAttackRight2", MAGIC_DEF0, QUICKMAGICFIRELEFTATTACKRIGHT2_DEF1}
Event_QuickMagicFireLeftAttackLeft = {"W_QuickMagicFireLeftAttackLeft", MAGIC_DEF0, QUICKMAGICFIRELEFTATTACKLEFT_DEF1}
Event_QuickMagicFireLeftAttackLeft2 = {"W_QuickMagicFireLeftAttackLeft2", MAGIC_DEF0, QUICKMAGICFIRELEFTATTACKLEFT2_DEF1}
Event_QuickMagicFireLeftBackStep = {"W_QuickMagicFireLeftBackStep", MAGIC_DEF0, QUICKMAGICFIRELEFTBACKSTEP_DEF1}
Event_QuickMagicFireRightNormal = {"W_QuickMagicFireRightNormal", MAGIC_DEF0, QUICKMAGICFIRERIGHTNORMAL_DEF1}
Event_QuickMagicFireRightDash = {"W_QuickMagicFireRightDash", MAGIC_DEF0, QUICKMAGICFIRERIGHTNORMAL_DEF1}
Event_QuickMagicFireRightStep = {"W_QuickMagicFireRightStep", MAGIC_DEF0, QUICKMAGICFIRERIGHTSTEP_DEF1}
Event_QuickMagicFireRightAttackRight = {"W_QuickMagicFireRightAttackRight", MAGIC_DEF0, QUICKMAGICFIRERIGHTATTACKRIGHT_DEF1}
Event_QuickMagicFireRightAttackRight2 = {"W_QuickMagicFireRightAttackRight2", MAGIC_DEF0, QUICKMAGICFIRELEFTATTACKRIGHT2_DEF1}
Event_QuickMagicFireRightAttackLeft = {"W_QuickMagicFireRightAttackLeft", MAGIC_DEF0, QUICKMAGICFIRELEFTATTACKLEFT_DEF1}
Event_QuickMagicFireRightAttackLeft2 = {"W_QuickMagicFireRightAttackLeft2", MAGIC_DEF0, QUICKMAGICFIRELEFTATTACKLEFT2_DEF1}
Event_QuickMagicFireRightBackStep = {"W_QuickMagicFireRightBackStep", MAGIC_DEF0, QUICKMAGICFIRERIGHTBACKSTEP_DEF1}
Event_StealthMagicRightLaunch = {"W_StealthMagicRightLaunch", MAGIC_DEF0, STEALTHMAGICRIGHTLAUNCH_DEF1}
Event_StealthMagicRightFire = {"W_StealthMagicRightFire", MAGIC_DEF0, STEALTHMAGICRIGHTFIRE_DEF1}
Event_StealthMagicLeftLaunch = {"W_StealthMagicLeftLaunch", MAGIC_DEF0, STEALTHMAGICLEFTLAUNCH_DEF1}
Event_StealthMagicLeftFire = {"W_StealthMagicLeftFire", MAGIC_DEF0, STEALTHMAGICLEFTFIRE_DEF1}
Event_MagicInvalid = {"W_MagicInvalid", MAGIC_DEF0, MAGICINVALID_DEF1}
Event_MagicInvalidMirror = {"W_MagicInvalid_mirror", MAGIC_DEF0, MAGICINVALIDMIRROR_DEF1}
Event_ItemWeaponEnchant = {"W_ItemWeaponEnchant", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMWEAPONENCHANT_DEF2}
Event_ItemThrowKnife = {"W_ItemThrowKnife", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMTHROWKNIFE_DEF2}
Event_ItemThrowBottle = {"W_ItemThrowBottle", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMTHROWBOTTLE_DEF2}
Event_ItemMeganeStart = {"W_ItemMeganeStart", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMMEGANESTART_DEF2}
Event_ItemMeganeLoop = {"W_ItemMeganeLoop", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMMEGANELOOP_DEF2}
Event_ItemMeganeEnd = {"W_ItemMeganeEnd", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMMEGANEEND_DEF2}
Event_ItemWeaponRepair = {"W_ItemWeaponRepair", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMWEAPONREPAIR_DEF2}
Event_ItemSoul = {"W_ItemSoul", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMSOUL_DEF2}
Event_ItemDrinkStart = {"W_ItemDrinkStart", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMDRINKSTART_DEF2}
Event_ItemDrinkNothing = {"W_ItemDrinkNothing", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMDRINKNOTHING_DEF2}
Event_ItemDrinking = {"W_ItemDrinking", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMDRINKING_DEF2}
Event_ItemDrinkEnd = {"W_ItemDrinkEnd", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMDRINKEND_DEF2}
Event_ItemInvalid = {"W_ItemInvalid", ITEM_DEF0, ITEMNORMAL_DEF1, ITEM_INVALID_DEF2}
Event_ItemShockWeaveStart = {"W_ItemShockWeaveStart", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMSHOCKWAVESTART_DEF2}
Event_ItemShockWeaveEnd = {"W_ItemShockWeaveEnd", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMSHOCKWAVEEND_DEF2}
Event_ItemRecover = {"W_ItemRecover", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMRECOVER_DEF2}
Event_ItemMessage = {"W_ItemMessage", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMMESSAGE_DEF2}
Event_ItemPray = {"W_ItemPray", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMPRAY_DEF2}
Event_ItemTrap = {"W_ItemTrap", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMTRAP_DEF2}
Event_ItemDrinkStartMP = {"W_ItemDrinkStartMP", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMDRINKSTARTMP_DEF2}
Event_ItemDrinkingMP = {"W_ItemDrinkingMP", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMDRINKINGMP_DEF2}
Event_ItemDrinkEmpty = {"W_ItemDrinkEmpty", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMDRINKEMPTY_DEF2}
Event_ItemSummonStart = {"W_ItemSummonStart", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMSUMMONSTART_DEF2}
Event_ItemSummoning = {"W_ItemSummoning", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMSUMMONING_DEF2}
Event_ItemSummonEnd = {"W_ItemSummonEnd", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMSUMMONEND_DEF2}
Event_ItemThrowSpear = {"W_ItemThrowSpear", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMTHROWSPEAR_DEF2}
Event_ItemDragonFullStartAfter = {"W_DragonFullStartAfter", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMDRAGONFULLSTARTAFTER_DEF2}
Event_ItemEatJerky = {"W_ItemEatJerky", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMEATJERKY_DEF2}
Event_ItemLanternOn = {"W_ItemLanternOn", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMLANTERNON_DEF2}
Event_ItemLanternOff = {"W_ItemLanternOff", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMLANTERNOFF_DEF2}
Event_ItemElixir = {"W_ItemElixir", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMELIXIR_DEF2}
Event_ItemHorn = {"W_ItemHorn", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMHORN_DEF2}
Event_ItemPrayMulti = {"W_ItemPrayMulti", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMPRAYMULTI_DEF2}
Event_ItemReturnBuddy = {"W_ItemReturnBuddy", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMRETURNBUDDY_DEF2}
Event_ItemSummonBuddy = {"W_ItemSummonBuddy", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMSUMMONBUDDY_DEF2}
Event_ItemCopySleep = {"W_ItemCopySleep", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMCOPYSLEEP_DEF2}
Event_ItemVoice = {"W_ItemVoice", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMVOICE_DEF2}
Event_ItemHolySymbol = {"W_ItemHolySymbol", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMHOLYSYMBOL_DEF2}
Event_ItemHost = {"W_ItemHost", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMHOST_DEF2}
Event_ItemMultKick = {"W_ItemMultKick", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMMULTIKICK_DEF2}
Event_ItemTongue = {"W_ItemTongue", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMTONGUE_DEF2}
Event_ItemThrowBackBottle = {"W_ItemThrowBackBottle", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMTHROWBACKBOTTLE_DEF2}
Event_ItemAromaWide = {"W_ItemAromaWide", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMAROMAWIDE_DEF2}
Event_ItemAromaUp = {"W_ItemAromaUp", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMAROMAUP_DEF2}
Event_ItemAromaBreath = {"W_ItemAromaBreath", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMAROMABREATH_DEF2}
Event_ItemAromaDrink = {"W_ItemAromaDrink", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMAROMADRINK_DEF2}
Event_ItemAromaFront = {"W_ItemAromaFront", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMAROMAFRONT_DEF2}
Event_ItemSignPool = {"W_ItemSignPool", ITEM_DEF0, ITEMNORMAL_DEF1, ITEMSIGNPOOL_DEF2}
Event_ItemOneShot = {"W_ItemOneShot", ITEM_DEF0, ITEMONESHOT_DEF1}
Event_ItemDash = {"W_ItemDash", ITEM_DEF0, ITEMDASH_DEF1}
Event_ItemCombo = {"W_ItemCombo", ITEM_DEF0, ITEMCOMBO_DEF1}
Event_ItemOneShot_SelfTrans = {"W_ItemOneShot_SelfTrans", ITEM_DEF0, ITEMONESHOTSELFTRANS_DEF1}
Event_InstSummonStart = {"W_Summon_Start", PLAYMUSIC_DEF0, 0}
Event_InstSummonPlay = {"W_Summon_Play", PLAYMUSIC_DEF0, 1}
Event_InstSummonEnd = {"W_Summon_End", PLAYMUSIC_DEF0, 2}
Event_InstGoPlay = {"W_Go_Play", PLAYMUSIC_DEF0, 3}
Event_InstGoEnd = {"W_Go_End", PLAYMUSIC_DEF0, 4}
Event_InstComePlay = {"W_Come_Play", PLAYMUSIC_DEF0, 5}
Event_InstComeEnd = {"W_Come_End", PLAYMUSIC_DEF0, 6}
Event_InstReturnStart = {"W_Return_Start", PLAYMUSIC_DEF0, 7}
Event_InstReturnPlay = {"W_Return_Play", PLAYMUSIC_DEF0, 8}
Event_InstReturnEnd = {"W_Return_End", PLAYMUSIC_DEF0, 9}
Event_InstSummonPrePlay = {"W_Summon_PrePlay", PLAYMUSIC_DEF0, 10}
Event_InstGoStart = {"W_Go_Start", PLAYMUSIC_DEF0, 11}
Event_InstComeStart = {"W_Come_Start", PLAYMUSIC_DEF0, 12}
Event_QuickItemWeaponEnchant = {"W_QuickItemWeaponEnchant", ITEM_DEF0, ITEMQUICK_DEF1, QUICK_ITEM_WEAPON_ENCHANT_DEF2}
Event_QuickItemThrowBottle = {"W_QuickItemThrowBottle", ITEM_DEF0, ITEMQUICK_DEF1, QUICK_ITEMTHROWBOTTLE_DEF2}
Event_QuickItemThrowKnifeNormal = {"W_QuickItemThrowKnifeNormal", ITEM_DEF0, ITEMQUICK_DEF1, QUICK_ITEM_THROW_KNIFE_DEF2, QUICK_ITEM_THROW_KNIFE_NORMAL_DEF3}
Event_QuickItemThrowKnifeDash = {"W_QuickItemThrowKnifeDash", ITEM_DEF0, ITEMQUICK_DEF1, QUICK_ITEM_THROW_KNIFE_DEF2, QUICK_ITEM_THROW_KNIFE_DASH_DEF3}
Event_QuickItemThrowKnifeStep = {"W_QuickItemThrowKnifeStep", ITEM_DEF0, ITEMQUICK_DEF1, QUICK_ITEM_THROW_KNIFE_DEF2, QUICK_ITEM_THROW_KNIFE_STEP_DEF3}
Event_QuickItemThrowKnifeAttackRight = {"W_QuickItemThrowKnifeAttackRight", ITEM_DEF0, ITEMQUICK_DEF1, QUICK_ITEM_THROW_KNIFE_DEF2, QUICK_ITEM_THROW_KNIFE_ATTACK_RIGHT_DEF3}
Event_QuickItemThrowKnifeAttackLeft = {"W_QuickItemThrowKnifeAttackLeft", ITEM_DEF0, ITEMQUICK_DEF1, QUICK_ITEM_THROW_KNIFE_DEF2, QUICK_ITEM_THROW_KNIFE_ATTACK_LEFT_DEF3}
Event_QuickItemThrowKnifeAttackRight2 = {"W_QuickItemThrowKnifeAttackRight2", ITEM_DEF0, ITEMQUICK_DEF1, QUICK_ITEM_THROW_KNIFE_DEF2, QUICK_ITEM_THROW_KNIFE_ATTACK_RIGHT2_DEF3}
Event_QuickItemThrowKnifeAttackLeft2 = {"W_QuickItemThrowKnifeAttackLeft2", ITEM_DEF0, ITEMQUICK_DEF1, QUICK_ITEM_THROW_KNIFE_DEF2, QUICK_ITEM_THROW_KNIFE_ATTACK_LEFT2_DEF3}
Event_QuickItemEnchantNormal = {"W_QuickItemEnchantNormal", ITEM_DEF0, ITEMQUICK_DEF1, QUICK_ITEM_WEAPON_ENCHANT_DEF2, QUICK_ITEM_WEAPON_ENCHANT_NORMAL_DEF3}
Event_QuickItemEnchantDash = {"W_QuickItemEnchantDash", ITEM_DEF0, ITEMQUICK_DEF1, QUICK_ITEM_WEAPON_ENCHANT_DEF2, QUICK_ITEM_WEAPON_ENCHANT_DASH_DEF3}
Event_QuickItemEnchantStep = {"W_QuickItemEnchantStep", ITEM_DEF0, ITEMQUICK_DEF1, QUICK_ITEM_WEAPON_ENCHANT_DEF2, QUICK_ITEM_WEAPON_ENCHANT_STEP_DEF3}
Event_QuickItemEnchantAttackRight = {"W_QuickItemEnchantAttackRight", ITEM_DEF0, ITEMQUICK_DEF1, QUICK_ITEM_WEAPON_ENCHANT_DEF2, QUICK_ITEM_WEAPON_ENCHANT_ATTACK_RIGHT_DEF3}
Event_QuickItemEnchantAttackLeft = {"W_QuickItemEnchantAttackLeft", ITEM_DEF0, ITEMQUICK_DEF1, QUICK_ITEM_WEAPON_ENCHANT_DEF2, QUICK_ITEM_WEAPON_ENCHANT_ATTACK_LEFT_DEF3}
Event_AttackCrossbowRightStart = {"W_AttackCrossbowRightStart", ATTACKCROSSBOWRIGHT_DEF0, ATTACKCROSSBOWRIGHTSTART_DEF1}
Event_AttackCrossbowRightFire = {"W_AttackCrossbowRightFire", ATTACKCROSSBOWRIGHT_DEF0, ATTACKCROSSBOWRIGHTFIRE_DEF1}
Event_AttackCrossbowRightEmpty = {"W_AttackCrossbowRightEmpty", ATTACKCROSSBOWRIGHT_DEF0, ATTACKCROSSBOWRIGHTEMPTY_DEF1}
Event_AttackCrossbowRightReload = {"W_AttackCrossbowRightReload", ATTACKCROSSBOWRIGHT_DEF0, ATTACKCROSSBOWRIGHTRELOAD_DEF1}
Event_AttackCrossbowRightLoop = {"W_AttackCrossbowRightLoop", ATTACKCROSSBOWRIGHT_DEF0, ATTACKCROSSBOWRIGHTLOOP_DEF1}
Event_AttackCrossbowLeftStart = {"W_AttackCrossbowLeftStart", ATTACKCROSSBOWLEFT_DEF0, ATTACKCROSSBOWLEFTSTART_DEF1}
Event_AttackCrossbowLeftFire = {"W_AttackCrossbowLeftFire", ATTACKCROSSBOWLEFT_DEF0, ATTACKCROSSBOWLEFTFIRE_DEF1}
Event_AttackCrossbowLeftEmpty = {"W_AttackCrossbowLeftEmpty", ATTACKCROSSBOWLEFT_DEF0, ATTACKCROSSBOWLEFTEMPTY_DEF1}
Event_AttackCrossbowLeftReload = {"W_AttackCrossbowLeftReload", ATTACKCROSSBOWLEFT_DEF0, ATTACKCROSSBOWLEFTRELOAD_DEF1}
Event_AttackCrossbowLeftLoop = {"W_AttackCrossbowLeftLoop", ATTACKCROSSBOWLEFT_DEF0, ATTACKCROSSBOWLEFTLOOP_DEF1}
Event_AttackCrossbowBothLeftStart = {"W_AttackCrossbowBothLeftStart", ATTACKCROSSBOWBOTHLEFT_DEF0, ATTACKCROSSBOWBOTHLEFTSTART_DEF1}
Event_AttackCrossbowBothLeftFire = {"W_AttackCrossbowBothLeftFire", ATTACKCROSSBOWBOTHLEFT_DEF0, ATTACKCROSSBOWBOTHLEFTFIRE_DEF1}
Event_AttackCrossbowBothLeftEmpty = {"W_AttackCrossbowBothLeftEmpty", ATTACKCROSSBOWBOTHLEFT_DEF0, ATTACKCROSSBOWBOTHLEFTEMPTY_DEF1}
Event_AttackCrossbowBothLeftReload = {"W_AttackCrossbowBothLeftReload", ATTACKCROSSBOWBOTHLEFT_DEF0, ATTACKCROSSBOWBOTHLEFTRELOAD_DEF1}
Event_AttackCrossbowBothLeftLoop = {"W_AttackCrossbowBothLeftLoop", ATTACKCROSSBOWBOTHLEFT_DEF0, ATTACKCROSSBOWBOTHLEFTLOOP_DEF1}
Event_AttackCrossbowBothRightStart = {"W_AttackCrossbowBothRightStart", ATTACKCROSSBOWBOTHRIGHT_DEF0, ATTACKCROSSBOWBOTHRIGHTSTART_DEF1}
Event_AttackCrossbowBothRightFire = {"W_AttackCrossbowBothRightFire", ATTACKCROSSBOWBOTHRIGHT_DEF0, ATTACKCROSSBOWBOTHRIGHTFIRE_DEF1}
Event_AttackCrossbowBothRightEmpty = {"W_AttackCrossbowBothRightEmpty", ATTACKCROSSBOWBOTHRIGHT_DEF0, ATTACKCROSSBOWBOTHRIGHTEMPTY_DEF1}
Event_AttackCrossbowBothRightReload = {"W_AttackCrossbowBothRightReload", ATTACKCROSSBOWBOTHRIGHT_DEF0, ATTACKCROSSBOWBOTHRIGHTRELOAD_DEF1}
Event_AttackCrossbowBothRightLoop = {"W_AttackCrossbowBothRightLoop", ATTACKCROSSBOWBOTHRIGHT_DEF0, ATTACKCROSSBOWBOTHRIGHTLOOP_DEF1}
Event_AttackCrossbowBothRightStartContinue = {"W_AttackCrossbowBothRightStartContinue", ATTACKCROSSBOWBOTHRIGHT_DEF0, ATTACKCROSSBOWBOTHRIGHTSTARTCONTINUE_DEF1}
Event_StealthAttackCrossbowRightStart = {"W_StealthAttackCrossbowRightStart", STEALTHATTACKCROSSBOWRIGHT_DEF0, STEALTHATTACKCROSSBOWRIGHTSTART_DEF1}
Event_StealthAttackCrossbowRightFire = {"W_StealthAttackCrossbowRightFire", STEALTHATTACKCROSSBOWRIGHT_DEF0, STEALTHATTACKCROSSBOWRIGHTFIRE_DEF1}
Event_StealthAttackCrossbowRightEmpty = {"W_StealthAttackCrossbowRightEmpty", STEALTHATTACKCROSSBOWRIGHT_DEF0, STEALTHATTACKCROSSBOWRIGHTEMPTY_DEF1}
Event_StealthAttackCrossbowRightLoop = {"W_StealthAttackCrossbowRightLoop", STEALTHATTACKCROSSBOWRIGHT_DEF0, STEALTHATTACKCROSSBOWRIGHTLOOP_DEF1}
Event_StealthAttackCrossbowRightReload = {"W_StealthAttackCrossbowRightReload", STEALTHATTACKCROSSBOWRIGHT_DEF0, STEALTHATTACKCROSSBOWRIGHTRELOAD_DEF1}
Event_StealthAttackCrossbowLeftStart = {"W_StealthAttackCrossbowLeftStart", STEALTHATTACKCROSSBOWLEFT_DEF0, STEALTHATTACKCROSSBOWLEFTSTART_DEF1}
Event_StealthAttackCrossbowLeftFire = {"W_StealthAttackCrossbowLeftFire", STEALTHATTACKCROSSBOWLEFT_DEF0, STEALTHATTACKCROSSBOWLEFTFIRE_DEF1}
Event_StealthAttackCrossbowLeftEmpty = {"W_StealthAttackCrossbowLeftEmpty", STEALTHATTACKCROSSBOWLEFT_DEF0, STEALTHATTACKCROSSBOWLEFTEMPTY_DEF1}
Event_StealthAttackCrossbowLeftLoop = {"W_StealthAttackCrossbowLeftLoop", STEALTHATTACKCROSSBOWLEFT_DEF0, STEALTHATTACKCROSSBOWLEFTLOOP_DEF1}
Event_StealthAttackCrossbowLeftReload = {"W_StealthAttackCrossbowLeftReload", STEALTHATTACKCROSSBOWLEFT_DEF0, STEALTHATTACKCROSSBOWLEFTRELOAD_DEF1}
Event_StealthAttackCrossbowBothLeftStart = {"W_StealthAttackCrossbowBothLeftStart", STEALTHATTACKCROSSBOWBOTHLEFT_DEF0, STEALTHATTACKCROSSBOWBOTHLEFTSTART_DEF1}
Event_StealthAttackCrossbowBothLeftFire = {"W_StealthAttackCrossbowBothLeftFire", STEALTHATTACKCROSSBOWBOTHLEFT_DEF0, STEALTHATTACKCROSSBOWBOTHLEFTFIRE_DEF1}
Event_StealthAttackCrossbowBothLeftEmpty = {"W_StealthAttackCrossbowBothLeftEmpty", STEALTHATTACKCROSSBOWBOTHLEFT_DEF0, STEALTHATTACKCROSSBOWBOTHLEFTEMPTY_DEF1}
Event_StealthAttackCrossbowBothLeftLoop = {"W_StealthAttackCrossbowBothLeftLoop", STEALTHATTACKCROSSBOWBOTHLEFT_DEF0, STEALTHATTACKCROSSBOWBOTHLEFTLOOP_DEF1}
Event_StealthAttackCrossbowBothLeftReload = {"W_StealthAttackCrossbowBothLeftReload", STEALTHATTACKCROSSBOWBOTHLEFT_DEF0, STEALTHATTACKCROSSBOWBOTHLEFTRELOAD_DEF1}
Event_StealthAttackCrossbowBothRightStart = {"W_StealthAttackCrossbowBothRightStart", STEALTHATTACKCROSSBOWBOTHRIGHT_DEF0, STEALTHATTACKCROSSBOWBOTHRIGHTSTART_DEF1}
Event_StealthAttackCrossbowBothRightFire = {"W_StealthAttackCrossbowBothRightFire", STEALTHATTACKCROSSBOWBOTHRIGHT_DEF0, STEALTHATTACKCROSSBOWBOTHRIGHTFIRE_DEF1}
Event_StealthAttackCrossbowBothRightEmpty = {"W_StealthAttackCrossbowBothRightEmpty", STEALTHATTACKCROSSBOWBOTHRIGHT_DEF0, STEALTHATTACKCROSSBOWBOTHRIGHTEMPTY_DEF1}
Event_StealthAttackCrossbowBothRightLoop = {"W_StealthAttackCrossbowBothRightLoop", STEALTHATTACKCROSSBOWBOTHRIGHT_DEF0, STEALTHATTACKCROSSBOWBOTHRIGHTLOOP_DEF1}
Event_StealthAttackCrossbowBothRightReload = {"W_StealthAttackCrossbowBothRightReload", STEALTHATTACKCROSSBOWBOTHRIGHT_DEF0, STEALTHATTACKCROSSBOWBOTHRIGHTRELOAD_DEF1}
Event_StealthItemOneShot = {"W_StealthItemOneShot", STEALTHITEM_DEF0, STEALTHITEMONESHOT_DEF1}
Event_StealthItemOneShot_SelfTrans = {"W_StealthItemOneShot_SelfTrans", STEALTHITEM_DEF0, STEALTHITEMONESHOT_SELFTRANS_DEF1}
Event_StealthItemDrinkStart = {"W_StealthItemDrinkStart", STEALTHITEM_DEF0, STEALTHITEMDRINKSTART_DEF1}
Event_StealthItemDrinking = {"W_StealthItemDrinking", STEALTHITEM_DEF0, STEALTHITEMDRINKING_DEF1}
Event_StealthItemDrinkEnd = {"W_StealthItemDrinkEnd", STEALTHITEM_DEF0, STEALTHITEMDRINKEND_DEF1}
Event_StealthItemDrinkNothing = {"W_StealthItemDrinkNothing", STEALTHITEM_DEF0, STEALTHITEMDRINKNOTHING_DEF1}
Event_StealthItemDrinkEmpty = {"W_StealthItemDrinkEmpty", STEALTHITEM_DEF0, STEALTHITEMDRINKEMPTY_DEF1}
Event_RideMagicFire = {"W_RideMagicFire", RIDEMAGICFIRE_DEF1}
Event_RideMagicLaunch = {"W_RideMagicLaunch", RIDEMAGICLAUNCH_DEF1}
Event_WideshotRightStart = {"W_WideshotRightStart", WIDESHOTRIGHT_DEF0, WIDESHOTRIGHTSTART_DEF1}
Event_WideshotRightLoop = {"W_WideshotRightLoop", WIDESHOTRIGHT_DEF0, WIDESHOTRIGHTLOOP_DEF1}
Event_WideshotRightRelease = {"W_WideshotRightRelease", WIDESHOTRIGHT_DEF0, WIDESHOTRIGHTRELEASE_DEF1}
Event_WideshotRightStartMirror = {"W_WideshotRightStart_mirror", WIDESHOTRIGHT_DEF0, WIDESHOTRIGHTSTARTMIRROR_DEF1}
Event_WideshotLeftStart = {"W_WideshotLeftStart", WIDESHOTLEFT_DEF0, WIDESHOTLEFTSTART_DEF1}
Event_WideshotLeftLoop = {"W_WideshotLeftLoop", WIDESHOTLEFT_DEF0, WIDESHOTLEFTLOOP_DEF1}
Event_WideshotLeftRelease = {"W_WideshotLeftRelease", WIDESHOTLEFT_DEF0, WIDESHOTLEFTRELEASE_DEF1}
Event_WideshotLeftStartMirror = {"W_WideshotLeftStart_mirror", WIDESHOTLEFT_DEF0, WIDESHOTLEFTSTARTMIRROR_DEF1}
Event_ChainRecover = {"W_ChainRecover", CHAINRECOVER_DEF0, CHAINRECOVER_DEF1}
Event_ChainRecoverMirror = {"W_ChainRecover_mirror", CHAINRECOVER_DEF0, CHAINRECOVERMIRROR_DEF1}
Event_StepInRightStart = {"W_StepInRightStart", USEGENTRANSITION_DEF0, STEPINRIGHTSTART_DEF1}
Event_AttackSpinStart = {"W_AttackSpinStart", USEGENTRANSITION_DEF0, ATTACKSPIN_DEF1}
Event_Charge = {"W_Charge", USEGENTRANSITION_DEF0, CHARGE_DEF1}
Event_CrossbowStepInRightStart = {"W_CrossbowStepInRightStart", USEGENTRANSITION_DEF0, CROSSBOWSTEPINSTART_DEF1}
Event_HeadHunt = {"W_HeadHunt", USEGENTRANSITION_DEF0, HEADHUNT_DEF1}
Event_OneShot = {"W_OneShot", USEGENTRANSITION_DEF0, ONESHOT_DEF1}
Event_SwordArtsHalfOneShot = {"W_SwordArtsHalfOneShot", SWORDARTHALF_DEF0, SWORDARTSONESHOTHALF_DEF1}
Event_SwordArtsHalfOneShotCombo1 = {"W_SwordArtsHalfOneShotComboEnd", SWORDARTHALF_DEF0, SWORDARTSONESHOTHALF_COMBO1_DEF1}
Event_SwordArtsHalfOneShotCombo2 = {"W_SwordArtsHalfOneShotComboEnd_2", SWORDARTHALF_DEF0, SWORDARTSONESHOTHALF_COMBO2_DEF1}
Event_SwordArtsHalfLoopLoop = {"W_SwordArtsHalfLoopLoop", SWORDARTHALF_DEF0, SWORDARTSONESHOTHALF_LOOP_DEF1}
Event_SwordArtsHalfLoopEnd = {"W_SwordArtsHalfLoopEnd", SWORDARTHALF_DEF0, SWORDARTSONESHOTHALF_LOOP_END_DEF1}
Event_SwordArtsHalfOneShotShieldLeft = {"W_SwordArtsHalfOneShotShieldLeft", SWORDARTHALF_DEF0, SWORDARTSONESHOTHALF_LEFT_DEF1}
Event_SwordArtsHalfLeftLoopLoop = {"W_SwordArtsHalfLeftLoopLoop", SWORDARTHALF_DEF0, SWORDARTSONESHOTHALF_LEFT_LOOP_DEF1}
Event_SwordArtsHalfLeftLoopEnd = {"W_SwordArtsHalfLeftLoopEnd", SWORDARTHALF_DEF0, SWORDARTSONESHOTHALF_LEFT_LOOP_END_DEF1}
Event_GestureStart = {"W_GestureStart", GESTURE_DEF0, GESTURESTART_DEF1}
Event_GestureLoopStart = {"W_GestureLoopStart", GESTURE_DEF0, GESTURESTART_DEF1}
Event_GestureLoop = {"W_GestureLoop", GESTURE_DEF0, GESTURELOOP_DEF1}
Event_GestureEnd = {"W_GestureEnd", GESTURE_DEF0, GESTUREEND_DEF1}
Event_MagicBuffRight = {"W_MagicBuffRight", MAGICBUFFRIGHT_DEF0, MAGICBUFFRIGHT_DEF1}
Event_MagicBuffRightMirror = {"W_MagicBuffRight_mirror", MAGICBUFFRIGHT_DEF0, MAGICBUFFRIGHTMIRROR_DEF1}
Event_MagicBuffLeft = {"W_MagicBuffLeft", MAGICBUFFLEFT_DEF0, MAGICBUFFLEFT_DEF1}
Event_MagicBuffLeftMirror = {"W_MagicBuffLeft_mirror", MAGICBUFFLEFT_DEF0, MAGICBUFFLEFTMIRROR_DEF1}
Event_StopHalfBlendDashStop = {"W_DashStopHalfBlend", STOPHALFBLEND_DEF0, STOPHALFBLENDDASH_DEF1}
Event_StopHalfBlendRunFront = {"W_RunStopFrontHalfBlend", STOPHALFBLEND_DEF0, STOPHALFBLENDRUNFRONT_DEF1}
Event_StopHalfBlendRunBack = {"W_RunStopBackHalfBlend", STOPHALFBLEND_DEF0, STOPHALFBLENDRUNBACK_DEF1}
Event_StopHalfBlendRunLeft = {"W_RunStopLeftHalfBlend", STOPHALFBLEND_DEF0, STOPHALFBLENDRUNLEFT_DEF1}
Event_StopHalfBlendRunRight = {"W_RunStopRightHalfBlend", STOPHALFBLEND_DEF0, STOPHALFBLENDRUNRIGHT_DEF1}
Event_StopHalfBlendWalkFront = {"W_WalkStopFrontHalfBlend", STOPHALFBLEND_DEF0, STOPHALFBLENDWALKFRONT_DEF1}
Event_StopHalfBlendWalkBack = {"W_WalkStopBackHalfBlend", STOPHALFBLEND_DEF0, STOPHALFBLENDWALKBACK_DEF1}
Event_StopHalfBlendWalkLeft = {"W_WalkStopLeftHaflBlend", STOPHALFBLEND_DEF0, STOPHALFBLENDWALKLEFT_DEF1}
Event_StopHalfBlendWalkRight = {"W_WalkStopRightHalfBlend", STOPHALFBLEND_DEF0, STOPHALFBLENDWALKRIGHT_DEF1}
Event_StopHalfBlendDash180 = {"W_Dash180HalfBlend", STOPHALFBLEND_DEF0, STOPHALFBLENDDASH180_DEF1}
Event_EventHalfBlend60071 = {"W_EventHalfBlend60071", EVENTHALFBLEND_DEF0, EVENTHALFBLEND60071_DEF1}
Event_EventHalfBlend360070 = {"W_EventHalfBlend360070", EVENTHALFBLEND_DEF0, EVENTHALFBLEND360070_DEF1}

function IncNum(num)
    local str = "Debug"
    if num < 10 then
        str = "Debug0"
    end
    vector = GetVariable(str .. num)
    vector[0] = vector[0] + 1
    vector[1] = g_FrameCount
    SetVariable(str .. num, vector)
end

function DebugPrint(pos, val)
    local str = "Debug"
    if pos < 10 then
        str = "Debug0"
    end
    vector = GetVariable(str .. pos)
    vector[0] = val
    vector[1] = g_FrameCount
    SetVariable(str .. pos, vector)
end

function PrintString(str)
    act(9000, str)
end

function ConvergeValue(target_val, cur_val, max_inc, max_dec)
    local dT = env(333) / 1000
    local gap = math.abs(target_val - cur_val)
    local ret = target_val
    local f7_local0 = nil
    if cur_val < target_val then
        f7_local0 = math.abs(max_inc * dT)
    elseif target_val < cur_val then
        f7_local0 = -1 * math.abs(max_dec * dT)
    else
        return ret
    end
    if f7_local0 < gap then
        ret = cur_val + f7_local0
        if f7_local0 > 0 then
            if target_val < ret then
                ret = target_val
            end
        elseif ret < target_val then
            ret = target_val
        end
    end
    return ret
end

function EaseInOutVal(target_val, cur_val, ease_time_up, ease_time_down, start_variable, target_variable, timer_variable)
    if target_val == cur_val then
        return cur_val
    end
    local timer = GetVariable(timer_variable)
    local start_val = GetVariable(start_variable)
    local prev_target_val = GetVariable(target_variable)
    local ease_time = ease_time_up
    if target_val <= cur_val then
        ease_time = ease_time_down
    end
    if timer <= 0 or prev_target_val ~= target_val then
        timer = ease_time
        start_val = cur_val
        SetVariable(start_variable, start_val)
        SetVariable(target_variable, target_val)
    end
    local dT = env(333) / 1000
    timer = timer - dT
    if timer < 0 then
        timer = 0
    end
    SetVariable(timer_variable, timer)
    local RangeY = target_val - start_val
    local x = 1 - timer / ease_time
    if x >= 1 then
        x = 1
    elseif x <= 0 then
        x = 0
    end
    local f8_local0 = nil
    if x < 0.5 then
        f8_local0 = 4 * x * x * x
    else
        f8_local0 = 1 - math.pow(-2 * x + 2, 3) / 2
    end
    f8_local0 = nil
    if f8_local0 >= 1 then
        f8_local0 = 1
    elseif f8_local0 <= 0 then
        f8_local0 = 0
    end
    cur_val = f8_local0 * RangeY + start_val
    if RangeY <= 0 then
        if cur_val < target_val then
            cur_val = target_val
        end
    elseif target_val < cur_val then
        cur_val = target_val
    end
    return cur_val
end

function ForwardLeg()
    local leftLegModelSpace = hkbGetOldBoneModelSpace("L_Toe0")
    local rightLegModelSpace = hkbGetOldBoneModelSpace("R_Toe0")
    local leftForward = leftLegModelSpace:getTranslation()
    local rightForward = rightLegModelSpace:getTranslation()
    if rightForward[2] < leftForward[2] then
        SetVariable("IsRightFootForward", 1)
        return 1
    else
        SetVariable("IsRightFootForward", 0)
        return 0
    end
end

function Move_onGenerate()
    local speed = 0
    if env(1116, 100000) == TRUE then
        speed = 0
    elseif env(1116, 100001) == TRUE then
        speed = 1
    elseif env(1116, 100002) == TRUE then
        speed = 2
    end
    local maxoffset = 0.10000000149011612 * speed
    local minoffset = -0.10000000149011612 * speed
    hkbGetBoneModelSpace("RootPos")
    local turnangle = GetVariable("TurnAngle")
    local internaloffset = GetVariable("InternalOffset")
    local target_val = 0
    if math.abs(turnangle) <= 2 then
        target_val = 0
    elseif turnangle > 2 then
        target_val = minoffset
    elseif turnangle < -2 then
        target_val = maxoffset
    end
    local offset = ConvergeValue(target_val, internaloffset, 0.30000001192092896, 0.30000001192092896)
    local rootpos_pose_modelspace = hkbGetBoneModelSpace("RootPos")
    local rootpos_pose_localspace = hkbGetBoneLocalSpace("RootPos")
    local quat = rootpos_pose_localspace:getRotation() / rootpos_pose_modelspace:getRotation()
    local offset_vec = hkVector4.new(1, 0, 0, 0)
    offset_vec:setRotatedDir(quat, offset_vec)
    offset_vec = offset_vec * offset
    local rootpos_translation_localspace = rootpos_pose_localspace:getTranslation() + offset_vec
    rootpos_pose_localspace:setTranslation(rootpos_translation_localspace)
    hkbSetBoneLocalSpace("RootPos", rootpos_pose_localspace)
    SetVariable("MoveTwistAngle", offset * 80)
    SetVariable("InternalOffset", offset)
end

function ChangeWaistTwist(max_start_angle, min_start_angle, max_end_angle, min_end_angle)
    local is_dash = env(1116, 100002)
    if is_dash == TRUE then
        SetVariable("ChangeStartWaistTwistAngle", ConvergeValue(-max_start_angle, GetVariable("ChangeStartWaistTwistAngle"), 90, 90))
        SetVariable("ChangeEndWaistTwistAngle", ConvergeValue(-max_end_angle, GetVariable("ChangeEndWaistTwistAngle"), 90, 90))
        return
    else
        SetVariable("ChangeStartWaistTwistAngle", ConvergeValue(min_start_angle, GetVariable("ChangeStartWaistTwistAngle"), 90, 90))
        SetVariable("ChangeEndWaistTwistAngle", ConvergeValue(min_end_angle, GetVariable("ChangeEndWaistTwistAngle"), 90, 90))
    end
end

function IsStealth()
    if env(1116, 8001) == TRUE then
        return TRUE
    else
        return FALSE
    end
end

function IsDualBlade()
    local style = c_Style
    if style == HAND_LEFT_BOTH then
        return env(340, 0)
    else
        return env(340, 1)
    end
end

function UpdatePostureTwist()
    local postureType = 0
    if env(500) == TRUE then
        postureType = 1
    elseif TRUE == IsStealth() then
        postureType = 2
    end
    UpdateArmTwist(postureType)
    UpdateRightWristTwist(postureType)
    UpdateLeftWristTwist(postureType)
    UpdateFemaleTwist(postureType)
end

MaxConvergerate_ArmTwist = 90
MaxConvergerate_Wrist = 90

function UpdateArmTwist(postureType)
    local maxRightArmSide = env(367, 0, postureType)
    local maxRightArmFront = env(367, 1, postureType)
    env(367, 5, postureType)
    local maxLeftArmFront = env(367, 6, postureType)
    local rightArmSide = 0
    local rightArmFront = 0
    local leftArmFront = 0
    if 0 < g_TimeActEditor_00 then
        rightArmFront = maxRightArmFront * g_TimeActEditor_00
        rightArmSide = maxRightArmSide * g_TimeActEditor_00
        leftArmFront = maxLeftArmFront * g_TimeActEditor_00
    elseif 0 < g_TimeActEditor_02 then
        rightArmFront = maxRightArmFront * g_TimeActEditor_02
        rightArmSide = maxRightArmSide * g_TimeActEditor_02
        leftArmFront = maxLeftArmFront * g_TimeActEditor_02
    elseif 0 < g_TimeActEditor_12 and IsIgnoreMovePostureState() == FALSE then
        rightArmFront = maxRightArmFront * g_TimeActEditor_12
        rightArmSide = maxRightArmSide * g_TimeActEditor_12
        leftArmFront = maxLeftArmFront * g_TimeActEditor_12
    end
    local MaxConvergerate = MaxConvergerate_ArmTwist
    local convergeRateRightArmFront = MaxConvergerate
    local convergeRateRightArmSide = MaxConvergerate
    local convergeRateLeftFront = MaxConvergerate
    if maxRightArmSide < maxRightArmFront and maxRightArmSide > 0 then
        convergeRateRightArmSide = maxRightArmSide / maxRightArmFront * MaxConvergerate
    elseif maxRightArmFront < maxRightArmSide and maxRightArmFront > 0 then
        convergeRateRightArmFront = maxRightArmFront / maxRightArmSide * MaxConvergerate
        convergeRateLeftFront = maxLeftArmFront / maxRightArmSide * MaxConvergerate
    end
    local f15_local0 = nil
    local f15_local1 = nil
    local f15_local2 = nil
    local f15_local3 = nil
    if IsDualBlade() == TRUE or c_Style == HAND_RIGHT or postureType == 1 then
        f15_local0 = ConvergeValue(rightArmFront, GetVariable("EquipTwist_Arm_ForwardBack_R"), convergeRateRightArmFront, convergeRateRightArmFront)
        f15_local1 = ConvergeValue(leftArmFront, GetVariable("EquipTwist_Arm_ForwardBack_L"), convergeRateLeftFront, convergeRateLeftFront)
        f15_local2 = ConvergeValue(0, GetVariable("EquipTwist_TwoHand_UpDown"), convergeRateRightArmFront, convergeRateRightArmFront)
        f15_local3 = ConvergeValue(rightArmSide, GetVariable("EquipTwist_TwoHand_SideRotation"), convergeRateRightArmSide, convergeRateRightArmSide)
    else
        f15_local0 = ConvergeValue(0, GetVariable("EquipTwist_Arm_ForwardBack_R"), convergeRateRightArmFront, convergeRateRightArmFront)
        f15_local1 = ConvergeValue(0, GetVariable("EquipTwist_Arm_ForwardBack_L"), convergeRateLeftFront, convergeRateLeftFront)
        f15_local2 = ConvergeValue(rightArmFront, GetVariable("EquipTwist_TwoHand_UpDown"), convergeRateRightArmFront, convergeRateRightArmFront)
        f15_local3 = ConvergeValue(rightArmSide, GetVariable("EquipTwist_TwoHand_SideRotation"), convergeRateRightArmSide, convergeRateRightArmSide)
    end
    SetVariable("EquipTwist_Arm_ForwardBack_R", f15_local0)
    SetVariable("EquipTwist_Arm_ForwardBack_L", f15_local1)
    SetVariable("EquipTwist_TwoHand_UpDown", f15_local2)
    SetVariable("EquipTwist_TwoHand_SideRotation", f15_local3)
    if f15_local0 ~= 0 then
        SetVariable("R_Arm_ForwardBack_En", true)
    else
        SetVariable("R_Arm_ForwardBack_En", false)
    end
    if f15_local1 ~= 0 then
        SetVariable("L_Arm_ForwardBack_En", true)
    else
        SetVariable("L_Arm_ForwardBack_En", false)
    end
    if f15_local2 ~= 0 then
        SetVariable("EquipTwist_TwoHand_UpDown_En", true)
    else
        SetVariable("EquipTwist_TwoHand_UpDown_En", false)
    end
    if f15_local3 ~= 0 then
        SetVariable("EquipTwist_TwoHand_Side_En", true)
    else
        SetVariable("EquipTwist_TwoHand_Side_En", false)
    end
end

function UpdateRightWristTwist(postureType)
    local maxSide = env(367, 4, postureType)
    local maxFront = env(367, 3, postureType)
    local side = 0
    local front = 0
    if 0 < g_TimeActEditor_00 then
        front = maxFront * g_TimeActEditor_00
        side = maxSide * g_TimeActEditor_00
    elseif 0 < g_TimeActEditor_02 then
        front = maxFront * g_TimeActEditor_02
        side = maxSide * g_TimeActEditor_02
    elseif 0 < g_TimeActEditor_12 and IsIgnoreMovePostureState() == FALSE then
        front = maxFront * g_TimeActEditor_12
        side = maxSide * g_TimeActEditor_12
    end
    local MaxConvergerate = MaxConvergerate_Wrist
    local convergeRateFront = MaxConvergerate
    local convergeRateSide = MaxConvergerate
    if maxSide < maxFront and maxSide > 0 then
        convergeRateSide = maxSide / maxFront * MaxConvergerate
    elseif maxFront < maxSide and maxFront > 0 then
        convergeRateFront = maxFront / maxSide * MaxConvergerate
    end
    local twistFront = ConvergeValue(front, GetVariable("EquipTwist_Arm_Wristpose_R"), convergeRateFront, convergeRateFront)
    local twistSide = ConvergeValue(side, GetVariable("EquipTwist_Hand_SideRotation_R"), convergeRateSide, convergeRateSide)
    SetVariable("EquipTwist_Arm_Wristpose_R", twistFront)
    SetVariable("EquipTwist_Hand_SideRotation_R", twistSide)
end

function UpdateLeftWristTwist(postureType)
    local maxSide = env(367, 9, postureType)
    local maxFront = env(367, 8, postureType)
    local side = 0
    local front = 0
    if 0 < g_TimeActEditor_00 then
        front = maxFront * g_TimeActEditor_00
        side = maxSide * g_TimeActEditor_00
    elseif 0 < g_TimeActEditor_02 then
        front = maxFront * g_TimeActEditor_02
        side = maxSide * g_TimeActEditor_02
    elseif 0 < g_TimeActEditor_12 and IsIgnoreMovePostureState() == FALSE then
        front = maxFront * g_TimeActEditor_12
        side = maxSide * g_TimeActEditor_12
    end
    local MaxConvergerate = MaxConvergerate_Wrist
    local convergeRateFront = MaxConvergerate
    local convergeRateSide = MaxConvergerate
    if maxSide < maxFront and maxSide > 0 then
        convergeRateSide = maxSide / maxFront * MaxConvergerate
    elseif maxFront < maxSide and maxFront > 0 then
        convergeRateFront = maxFront / maxSide * MaxConvergerate
    end
    local twistFront = ConvergeValue(front, GetVariable("EquipTwist_Arm_Wristpose_L"), convergeRateFront, convergeRateFront)
    local twistSide = ConvergeValue(side, GetVariable("EquipTwist_Hand_SideRotation_L"), convergeRateSide, convergeRateSide)
    SetVariable("EquipTwist_Arm_Wristpose_L", twistFront)
    SetVariable("EquipTwist_Hand_SideRotation_L", twistSide)
end

function UpdateFemaleTwist(postureType)
    local maxRightElbowSide = env(367, 2, postureType)
    local maxLeftElbowSide = env(367, 7, postureType)
    local maxLegSide = env(367, 10, postureType)
    local rightElbowside = 0
    local leftElbowSide = 0
    local legSide = 0
    if 0 < g_TimeActEditor_00 then
        leftElbowSide = maxLeftElbowSide * g_TimeActEditor_00
        rightElbowside = maxRightElbowSide * g_TimeActEditor_00
        legSide = maxLegSide * g_TimeActEditor_00
    elseif 0 < g_TimeActEditor_02 then
        leftElbowSide = maxLeftElbowSide * g_TimeActEditor_02
        rightElbowside = maxRightElbowSide * g_TimeActEditor_02
        legSide = maxLegSide * g_TimeActEditor_02
    elseif 0 < g_TimeActEditor_12 then
        if IsIgnoreMovePostureState() == FALSE then
            leftElbowSide = maxLeftElbowSide * g_TimeActEditor_12
            rightElbowside = maxRightElbowSide * g_TimeActEditor_12
        end
        legSide = maxLegSide * g_TimeActEditor_12
    end
    local MaxConvergeRate = 90
    local convergerateright = MaxConvergeRate
    local convergerateleft = MaxConvergeRate
    if maxRightElbowSide < maxLeftElbowSide and maxRightElbowSide > 0 then
        convergerateright = maxRightElbowSide / maxLeftElbowSide * MaxConvergeRate
    elseif maxLeftElbowSide < maxRightElbowSide and maxLeftElbowSide > 0 then
        convergerateleft = maxLeftElbowSide / maxRightElbowSide * MaxConvergeRate
    end
    local twistRightElbow = ConvergeValue(rightElbowside, GetVariable("FemaleTwist_Arm_Side_R"), convergerateright, convergerateright)
    local twistLeftElbow = ConvergeValue(leftElbowSide, GetVariable("FemaleTwist_Arm_Side_L"), convergerateleft, convergerateleft)
    local twistLeg = ConvergeValue(legSide, GetVariable("FemaleTwist_Legs"), MaxConvergeRate, MaxConvergeRate)
    SetVariable("FemaleTwist_Arm_Side_R", twistRightElbow)
    SetVariable("FemaleTwist_Arm_Side_L", twistLeftElbow)
    SetVariable("FemaleTwist_Legs", twistLeg)
    local enableFemaleTwist = false
    if twistRightElbow ~= 0 then
        enableFemaleTwist = true
    elseif twistLeftElbow ~= 0 then
        enableFemaleTwist = true
    elseif twistLeg ~= 0 then
        enableFemaleTwist = true
    end
    SetVariable("FemaleTwist_En", enableFemaleTwist)
end

function ActivateRightArmAdd(start_type)
    if IsRightArmAddState() == TRUE then
        return
    elseif start_type == START_FRAME_ALL then
        act(9000, "START_FRAME_ALL")
        local category = GetBaseCategory()
        if category == 1 then
            SetVariable("RightArmAddWeight_a02", 1)
            SetVariable("RightArmAddWeight_a03", 0)
        elseif category == 2 then
            SetVariable("RightArmAddWeight_a02", 0)
            SetVariable("RightArmAddWeight_a03", 1)
        else
            SetVariable("RightArmAddWeight_a02", 0)
            SetVariable("RightArmAddWeight_a03", 0)
        end
    elseif start_type == START_FRAME_A02 then
        act(9000, "START_FRAME_A02")
        local category = GetBaseCategory()
        if category == 1 then
            SetVariable("RightArmAddWeight_a02", 1)
        else
            SetVariable("RightArmAddWeight_a02", 0)
        end
        SetVariable("RightArmAddWeight_a03", 0)
    else
        SetVariable("RightArmAddWeight_a02", 0)
        SetVariable("RightArmAddWeight_a03", 0)
    end
end

function UpdateRightArmAdd()
    if IsRightArmAddState() == FALSE then
        return
    end
    local category = GetBaseCategory()
    if category == 1 then
        local layer_weight_a03 = ConvergeValue(0, GetVariable("RightArmAddWeight_a03"), 4, 4)
        SetVariable("RightArmAddWeight_a03", layer_weight_a03)
        act(9000, "UpdateRightArmAdd")
        if 0 < g_TimeActEditor_03 then
            local idle_weight_a02 = ConvergeValue(g_TimeActEditor_04, GetVariable("RightArmAddIdle"), 4, 4)
            SetVariable("RightArmAddIdle", idle_weight_a02)
            local active_weight_a02 = ConvergeValue(1 - g_TimeActEditor_04, GetVariable("RightArmAddActive"), 4, 4)
            SetVariable("RightArmAddActive", active_weight_a02)
            local layer_weight_a02 = g_TimeActEditor_03
            SetVariable("RightArmAddWeight_a02", layer_weight_a02)
            return
        else
            local layer_weight_a02 = ConvergeValue(0, GetVariable("RightArmAddWeight_a02"), 4, 4)
            SetVariable("RightArmAddWeight_a02", layer_weight_a02)
            return
        end
    elseif category == 2 then
        local layer_weight_a02 = ConvergeValue(0, GetVariable("RightArmAddWeight_a02"), 4, 4)
        SetVariable("RightArmAddWeight_a02", layer_weight_a02)
        if 0 < g_TimeActEditor_05 then
            local idle_weight_a03 = ConvergeValue(g_TimeActEditor_06, GetVariable("RightArmAddIdle"), 4, 4)
            SetVariable("RightArmAddIdle", idle_weight_a03)
            local active_weight_a03 = ConvergeValue(1 - g_TimeActEditor_06, GetVariable("RightArmAddActive"), 4, 4)
            SetVariable("RightArmAddActive", active_weight_a03)
            local layer_weight_a03 = g_TimeActEditor_05
            SetVariable("RightArmAddWeight_a03", layer_weight_a03)
            return
        else
            local layer_weight_a03 = ConvergeValue(0, GetVariable("RightArmAddWeight_a03"), 4, 4)
            SetVariable("RightArmAddWeight_a03", layer_weight_a03)
            return
        end
    elseif category == 0 then
        local layer_weight_a02 = ConvergeValue(0, GetVariable("RightArmAddWeight_a02"), 4, 4)
        SetVariable("RightArmAddWeight_a02", layer_weight_a02)
        local layer_weight_a03 = ConvergeValue(0, GetVariable("RightArmAddWeight_a03"), 4, 4)
        SetVariable("RightArmAddWeight_a03", layer_weight_a03)
    end
end

function IsRightArmAddState()
    local state = GetVariable("MasterActiveState")
    local attackState = GetVariable("AttackActiveState")
    local upper_state = GetVariable("UpperDefaultState00")
    if state == 24 and attackState == 3 then
        return TRUE
    elseif state == 42 then
        if upper_state == GESTURE_DEF0 then
            return TRUE
        elseif upper_state == ITEM_DEF0 then
            return TRUE
        elseif upper_state == MAGIC_DEF0 then
            return TRUE
        elseif upper_state == ATTACKCROSSBOWLEFT_DEF0 then
            return TRUE
        elseif upper_state == SWORDARTHALF_DEF0 then
            return TRUE
        end
    elseif state == 39 then
        return TRUE
    elseif state == 25 then
        return TRUE
    elseif state == 29 then
        return TRUE
    elseif state == 37 then
        return TRUE
    elseif state == 56 then
        return TRUE
    end
    return FALSE
end

function IsIgnoreMovePostureState()
    local state = GetVariable("MasterActiveState")
    local upper_state = GetVariable("UpperDefaultState00")
    local lower_state = GetVariable("LowerDefaultState00")
    if state == 42 and upper_state ~= lower_state then
        return TRUE
    elseif state == 56 and GetVariable("JumpAttackForm") >= 1 then
        return TRUE
    else
        return FALSE
    end
end

function GetTimeActEditorVariable()
    g_TimeActEditor_00 = GetVariable("TimeActEditor_00")
    g_TimeActEditor_01 = GetVariable("TimeActEditor_01")
    g_TimeActEditor_02 = GetVariable("TimeActEditor_02")
    g_TimeActEditor_03 = GetVariable("TimeActEditor_03")
    g_TimeActEditor_04 = GetVariable("TimeActEditor_04")
    g_TimeActEditor_05 = GetVariable("TimeActEditor_05")
    g_TimeActEditor_06 = GetVariable("TimeActEditor_06")
    g_TimeActEditor_07 = GetVariable("TimeActEditor_07")
    g_TimeActEditor_08 = GetVariable("TimeActEditor_08")
    g_TimeActEditor_09 = GetVariable("TimeActEditor_09")
    g_TimeActEditor_10 = GetVariable("TimeActEditor_10")
    g_TimeActEditor_11 = GetVariable("TimeActEditor_11")
    g_TimeActEditor_12 = GetVariable("TimeActEditor_12")
    g_TimeActEditor_13 = GetVariable("TimeActEditor_13")
    g_TimeActEditor_14 = GetVariable("TimeActEditor_14")
    g_TimeActEditor_15 = GetVariable("TimeActEditor_15")
end

function Master_onGenerate()
    Move_onGenerate()
end

global = {["__index"] = function (table, element)
    return dummy
end}

function dummy()
end

setmetatable(_G, global)
